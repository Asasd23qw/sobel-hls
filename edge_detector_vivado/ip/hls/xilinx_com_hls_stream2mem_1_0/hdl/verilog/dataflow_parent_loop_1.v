// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dataflow_parent_loop_1 (
        local_rows,
        p_read,
        img_data_stream_0_V_dout,
        img_data_stream_0_V_empty_n,
        img_data_stream_0_V_read,
        img_data_stream_1_V_dout,
        img_data_stream_1_V_empty_n,
        img_data_stream_1_V_read,
        img_data_stream_2_V_dout,
        img_data_stream_2_V_empty_n,
        img_data_stream_2_V_read,
        r,
        m_axi_pMemPort_AWVALID,
        m_axi_pMemPort_AWREADY,
        m_axi_pMemPort_AWADDR,
        m_axi_pMemPort_AWID,
        m_axi_pMemPort_AWLEN,
        m_axi_pMemPort_AWSIZE,
        m_axi_pMemPort_AWBURST,
        m_axi_pMemPort_AWLOCK,
        m_axi_pMemPort_AWCACHE,
        m_axi_pMemPort_AWPROT,
        m_axi_pMemPort_AWQOS,
        m_axi_pMemPort_AWREGION,
        m_axi_pMemPort_AWUSER,
        m_axi_pMemPort_WVALID,
        m_axi_pMemPort_WREADY,
        m_axi_pMemPort_WDATA,
        m_axi_pMemPort_WSTRB,
        m_axi_pMemPort_WLAST,
        m_axi_pMemPort_WID,
        m_axi_pMemPort_WUSER,
        m_axi_pMemPort_ARVALID,
        m_axi_pMemPort_ARREADY,
        m_axi_pMemPort_ARADDR,
        m_axi_pMemPort_ARID,
        m_axi_pMemPort_ARLEN,
        m_axi_pMemPort_ARSIZE,
        m_axi_pMemPort_ARBURST,
        m_axi_pMemPort_ARLOCK,
        m_axi_pMemPort_ARCACHE,
        m_axi_pMemPort_ARPROT,
        m_axi_pMemPort_ARQOS,
        m_axi_pMemPort_ARREGION,
        m_axi_pMemPort_ARUSER,
        m_axi_pMemPort_RVALID,
        m_axi_pMemPort_RREADY,
        m_axi_pMemPort_RDATA,
        m_axi_pMemPort_RLAST,
        m_axi_pMemPort_RID,
        m_axi_pMemPort_RUSER,
        m_axi_pMemPort_RRESP,
        m_axi_pMemPort_BVALID,
        m_axi_pMemPort_BREADY,
        m_axi_pMemPort_BRESP,
        m_axi_pMemPort_BID,
        m_axi_pMemPort_BUSER,
        index,
        baseAddr_address0,
        baseAddr_ce0,
        baseAddr_d0,
        baseAddr_q0,
        baseAddr_we0,
        ap_clk,
        ap_rst,
        p_read_ap_vld,
        r_ap_vld,
        index_ap_vld,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] local_rows;
input  [31:0] p_read;
input  [7:0] img_data_stream_0_V_dout;
input   img_data_stream_0_V_empty_n;
output   img_data_stream_0_V_read;
input  [7:0] img_data_stream_1_V_dout;
input   img_data_stream_1_V_empty_n;
output   img_data_stream_1_V_read;
input  [7:0] img_data_stream_2_V_dout;
input   img_data_stream_2_V_empty_n;
output   img_data_stream_2_V_read;
input  [31:0] r;
output   m_axi_pMemPort_AWVALID;
input   m_axi_pMemPort_AWREADY;
output  [31:0] m_axi_pMemPort_AWADDR;
output  [0:0] m_axi_pMemPort_AWID;
output  [31:0] m_axi_pMemPort_AWLEN;
output  [2:0] m_axi_pMemPort_AWSIZE;
output  [1:0] m_axi_pMemPort_AWBURST;
output  [1:0] m_axi_pMemPort_AWLOCK;
output  [3:0] m_axi_pMemPort_AWCACHE;
output  [2:0] m_axi_pMemPort_AWPROT;
output  [3:0] m_axi_pMemPort_AWQOS;
output  [3:0] m_axi_pMemPort_AWREGION;
output  [0:0] m_axi_pMemPort_AWUSER;
output   m_axi_pMemPort_WVALID;
input   m_axi_pMemPort_WREADY;
output  [31:0] m_axi_pMemPort_WDATA;
output  [3:0] m_axi_pMemPort_WSTRB;
output   m_axi_pMemPort_WLAST;
output  [0:0] m_axi_pMemPort_WID;
output  [0:0] m_axi_pMemPort_WUSER;
output   m_axi_pMemPort_ARVALID;
input   m_axi_pMemPort_ARREADY;
output  [31:0] m_axi_pMemPort_ARADDR;
output  [0:0] m_axi_pMemPort_ARID;
output  [31:0] m_axi_pMemPort_ARLEN;
output  [2:0] m_axi_pMemPort_ARSIZE;
output  [1:0] m_axi_pMemPort_ARBURST;
output  [1:0] m_axi_pMemPort_ARLOCK;
output  [3:0] m_axi_pMemPort_ARCACHE;
output  [2:0] m_axi_pMemPort_ARPROT;
output  [3:0] m_axi_pMemPort_ARQOS;
output  [3:0] m_axi_pMemPort_ARREGION;
output  [0:0] m_axi_pMemPort_ARUSER;
input   m_axi_pMemPort_RVALID;
output   m_axi_pMemPort_RREADY;
input  [31:0] m_axi_pMemPort_RDATA;
input   m_axi_pMemPort_RLAST;
input  [0:0] m_axi_pMemPort_RID;
input  [0:0] m_axi_pMemPort_RUSER;
input  [1:0] m_axi_pMemPort_RRESP;
input   m_axi_pMemPort_BVALID;
output   m_axi_pMemPort_BREADY;
input  [1:0] m_axi_pMemPort_BRESP;
input  [0:0] m_axi_pMemPort_BID;
input  [0:0] m_axi_pMemPort_BUSER;
input  [31:0] index;
output  [1:0] baseAddr_address0;
output   baseAddr_ce0;
output  [31:0] baseAddr_d0;
input  [31:0] baseAddr_q0;
output   baseAddr_we0;
input   ap_clk;
input   ap_rst;
input   p_read_ap_vld;
input   r_ap_vld;
input   index_ap_vld;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg ap_done;
reg ap_ready;

wire    dataflow_in_loop_U0_img_data_stream_0_V_read;
wire    dataflow_in_loop_U0_img_data_stream_1_V_read;
wire    dataflow_in_loop_U0_img_data_stream_2_V_read;
wire    dataflow_in_loop_U0_m_axi_pMemPort_AWVALID;
wire   [31:0] dataflow_in_loop_U0_m_axi_pMemPort_AWADDR;
wire   [0:0] dataflow_in_loop_U0_m_axi_pMemPort_AWID;
wire   [31:0] dataflow_in_loop_U0_m_axi_pMemPort_AWLEN;
wire   [2:0] dataflow_in_loop_U0_m_axi_pMemPort_AWSIZE;
wire   [1:0] dataflow_in_loop_U0_m_axi_pMemPort_AWBURST;
wire   [1:0] dataflow_in_loop_U0_m_axi_pMemPort_AWLOCK;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_AWCACHE;
wire   [2:0] dataflow_in_loop_U0_m_axi_pMemPort_AWPROT;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_AWQOS;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_AWREGION;
wire   [0:0] dataflow_in_loop_U0_m_axi_pMemPort_AWUSER;
wire    dataflow_in_loop_U0_m_axi_pMemPort_WVALID;
wire   [31:0] dataflow_in_loop_U0_m_axi_pMemPort_WDATA;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_WSTRB;
wire    dataflow_in_loop_U0_m_axi_pMemPort_WLAST;
wire   [0:0] dataflow_in_loop_U0_m_axi_pMemPort_WID;
wire   [0:0] dataflow_in_loop_U0_m_axi_pMemPort_WUSER;
wire    dataflow_in_loop_U0_m_axi_pMemPort_ARVALID;
wire   [31:0] dataflow_in_loop_U0_m_axi_pMemPort_ARADDR;
wire   [0:0] dataflow_in_loop_U0_m_axi_pMemPort_ARID;
wire   [31:0] dataflow_in_loop_U0_m_axi_pMemPort_ARLEN;
wire   [2:0] dataflow_in_loop_U0_m_axi_pMemPort_ARSIZE;
wire   [1:0] dataflow_in_loop_U0_m_axi_pMemPort_ARBURST;
wire   [1:0] dataflow_in_loop_U0_m_axi_pMemPort_ARLOCK;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_ARCACHE;
wire   [2:0] dataflow_in_loop_U0_m_axi_pMemPort_ARPROT;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_ARQOS;
wire   [3:0] dataflow_in_loop_U0_m_axi_pMemPort_ARREGION;
wire   [0:0] dataflow_in_loop_U0_m_axi_pMemPort_ARUSER;
wire    dataflow_in_loop_U0_m_axi_pMemPort_RREADY;
wire    dataflow_in_loop_U0_m_axi_pMemPort_BREADY;
wire   [30:0] dataflow_in_loop_U0_row;
wire   [1:0] dataflow_in_loop_U0_baseAddr_address0;
wire    dataflow_in_loop_U0_baseAddr_ce0;
wire   [31:0] dataflow_in_loop_U0_baseAddr_d0;
wire    dataflow_in_loop_U0_baseAddr_we0;
wire    dataflow_in_loop_U0_ap_done;
reg    dataflow_in_loop_U0_ap_start;
wire    dataflow_in_loop_U0_ap_ready;
wire    dataflow_in_loop_U0_ap_idle;
wire    dataflow_in_loop_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    loop_dataflow_enable;
reg   [31:0] loop_dataflow_input_count;
reg   [31:0] loop_dataflow_output_count;
reg    loop_dataflow_busy;
wire    dataflow_in_loop_U0_start_full_n;
wire    dataflow_in_loop_U0_start_write;

// power-on initialization
initial begin
#0 loop_dataflow_enable = 1'b0;
#0 loop_dataflow_input_count = 32'd0;
#0 loop_dataflow_output_count = 32'd0;
#0 loop_dataflow_busy = 1'b0;
end

dataflow_in_loop dataflow_in_loop_U0(
    .p_read(p_read),
    .img_data_stream_0_V_dout(img_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(img_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(dataflow_in_loop_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(img_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(dataflow_in_loop_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(img_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(dataflow_in_loop_U0_img_data_stream_2_V_read),
    .r(r),
    .m_axi_pMemPort_AWVALID(dataflow_in_loop_U0_m_axi_pMemPort_AWVALID),
    .m_axi_pMemPort_AWREADY(m_axi_pMemPort_AWREADY),
    .m_axi_pMemPort_AWADDR(dataflow_in_loop_U0_m_axi_pMemPort_AWADDR),
    .m_axi_pMemPort_AWID(dataflow_in_loop_U0_m_axi_pMemPort_AWID),
    .m_axi_pMemPort_AWLEN(dataflow_in_loop_U0_m_axi_pMemPort_AWLEN),
    .m_axi_pMemPort_AWSIZE(dataflow_in_loop_U0_m_axi_pMemPort_AWSIZE),
    .m_axi_pMemPort_AWBURST(dataflow_in_loop_U0_m_axi_pMemPort_AWBURST),
    .m_axi_pMemPort_AWLOCK(dataflow_in_loop_U0_m_axi_pMemPort_AWLOCK),
    .m_axi_pMemPort_AWCACHE(dataflow_in_loop_U0_m_axi_pMemPort_AWCACHE),
    .m_axi_pMemPort_AWPROT(dataflow_in_loop_U0_m_axi_pMemPort_AWPROT),
    .m_axi_pMemPort_AWQOS(dataflow_in_loop_U0_m_axi_pMemPort_AWQOS),
    .m_axi_pMemPort_AWREGION(dataflow_in_loop_U0_m_axi_pMemPort_AWREGION),
    .m_axi_pMemPort_AWUSER(dataflow_in_loop_U0_m_axi_pMemPort_AWUSER),
    .m_axi_pMemPort_WVALID(dataflow_in_loop_U0_m_axi_pMemPort_WVALID),
    .m_axi_pMemPort_WREADY(m_axi_pMemPort_WREADY),
    .m_axi_pMemPort_WDATA(dataflow_in_loop_U0_m_axi_pMemPort_WDATA),
    .m_axi_pMemPort_WSTRB(dataflow_in_loop_U0_m_axi_pMemPort_WSTRB),
    .m_axi_pMemPort_WLAST(dataflow_in_loop_U0_m_axi_pMemPort_WLAST),
    .m_axi_pMemPort_WID(dataflow_in_loop_U0_m_axi_pMemPort_WID),
    .m_axi_pMemPort_WUSER(dataflow_in_loop_U0_m_axi_pMemPort_WUSER),
    .m_axi_pMemPort_ARVALID(dataflow_in_loop_U0_m_axi_pMemPort_ARVALID),
    .m_axi_pMemPort_ARREADY(1'b0),
    .m_axi_pMemPort_ARADDR(dataflow_in_loop_U0_m_axi_pMemPort_ARADDR),
    .m_axi_pMemPort_ARID(dataflow_in_loop_U0_m_axi_pMemPort_ARID),
    .m_axi_pMemPort_ARLEN(dataflow_in_loop_U0_m_axi_pMemPort_ARLEN),
    .m_axi_pMemPort_ARSIZE(dataflow_in_loop_U0_m_axi_pMemPort_ARSIZE),
    .m_axi_pMemPort_ARBURST(dataflow_in_loop_U0_m_axi_pMemPort_ARBURST),
    .m_axi_pMemPort_ARLOCK(dataflow_in_loop_U0_m_axi_pMemPort_ARLOCK),
    .m_axi_pMemPort_ARCACHE(dataflow_in_loop_U0_m_axi_pMemPort_ARCACHE),
    .m_axi_pMemPort_ARPROT(dataflow_in_loop_U0_m_axi_pMemPort_ARPROT),
    .m_axi_pMemPort_ARQOS(dataflow_in_loop_U0_m_axi_pMemPort_ARQOS),
    .m_axi_pMemPort_ARREGION(dataflow_in_loop_U0_m_axi_pMemPort_ARREGION),
    .m_axi_pMemPort_ARUSER(dataflow_in_loop_U0_m_axi_pMemPort_ARUSER),
    .m_axi_pMemPort_RVALID(1'b0),
    .m_axi_pMemPort_RREADY(dataflow_in_loop_U0_m_axi_pMemPort_RREADY),
    .m_axi_pMemPort_RDATA(32'd0),
    .m_axi_pMemPort_RLAST(1'b0),
    .m_axi_pMemPort_RID(1'd0),
    .m_axi_pMemPort_RUSER(1'd0),
    .m_axi_pMemPort_RRESP(2'd0),
    .m_axi_pMemPort_BVALID(m_axi_pMemPort_BVALID),
    .m_axi_pMemPort_BREADY(dataflow_in_loop_U0_m_axi_pMemPort_BREADY),
    .m_axi_pMemPort_BRESP(m_axi_pMemPort_BRESP),
    .m_axi_pMemPort_BID(m_axi_pMemPort_BID),
    .m_axi_pMemPort_BUSER(m_axi_pMemPort_BUSER),
    .row(dataflow_in_loop_U0_row),
    .index(index),
    .baseAddr_address0(dataflow_in_loop_U0_baseAddr_address0),
    .baseAddr_ce0(dataflow_in_loop_U0_baseAddr_ce0),
    .baseAddr_d0(dataflow_in_loop_U0_baseAddr_d0),
    .baseAddr_q0(baseAddr_q0),
    .baseAddr_we0(dataflow_in_loop_U0_baseAddr_we0),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read_ap_vld(p_read_ap_vld),
    .r_ap_vld(r_ap_vld),
    .row_ap_vld(1'b0),
    .index_ap_vld(index_ap_vld),
    .ap_done(dataflow_in_loop_U0_ap_done),
    .ap_start(dataflow_in_loop_U0_ap_start),
    .ap_ready(dataflow_in_loop_U0_ap_ready),
    .ap_idle(dataflow_in_loop_U0_ap_idle),
    .ap_continue(dataflow_in_loop_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_busy <= 1'b0;
    end else begin
        if (((ap_continue == 1'b1) & (loop_dataflow_output_count == local_rows))) begin
            loop_dataflow_busy <= 1'b0;
        end else if ((ap_start == 1'b1)) begin
            loop_dataflow_busy <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_enable <= 1'b0;
    end else begin
        if (((loop_dataflow_enable == 1'b0) & (ap_start == 1'b1))) begin
            loop_dataflow_enable <= 1'b1;
        end else if (((loop_dataflow_enable == 1'b1) & (loop_dataflow_input_count == local_rows))) begin
            loop_dataflow_enable <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 32'd0;
    end else begin
        if (((loop_dataflow_enable == 1'b1) & (loop_dataflow_input_count == local_rows))) begin
            loop_dataflow_input_count <= 32'd0;
        end else if (((loop_dataflow_enable == 1'b1) & (dataflow_in_loop_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 32'd1);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 32'd0;
    end else begin
        if (((ap_continue == 1'b1) & (loop_dataflow_output_count == local_rows))) begin
            loop_dataflow_output_count <= 32'd0;
        end else if ((dataflow_in_loop_U0_ap_done == 1'b1)) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 32'd1);
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_busy == 1'b1) & (loop_dataflow_output_count == local_rows))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((loop_dataflow_input_count == local_rows)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(loop_dataflow_input_count == local_rows) & (loop_dataflow_enable == 1'b1))) begin
        dataflow_in_loop_U0_ap_start = 1'b1;
    end else begin
        dataflow_in_loop_U0_ap_start = 1'b0;
    end
end

assign ap_idle = dataflow_in_loop_U0_ap_idle;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = dataflow_in_loop_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_U0_ap_ready;

assign baseAddr_address0 = dataflow_in_loop_U0_baseAddr_address0;

assign baseAddr_ce0 = dataflow_in_loop_U0_baseAddr_ce0;

assign baseAddr_d0 = 32'd0;

assign baseAddr_we0 = 1'b0;

assign dataflow_in_loop_U0_ap_continue = 1'b1;

assign dataflow_in_loop_U0_row = loop_dataflow_input_count;

assign dataflow_in_loop_U0_start_full_n = 1'b1;

assign dataflow_in_loop_U0_start_write = 1'b0;

assign img_data_stream_0_V_read = dataflow_in_loop_U0_img_data_stream_0_V_read;

assign img_data_stream_1_V_read = dataflow_in_loop_U0_img_data_stream_1_V_read;

assign img_data_stream_2_V_read = dataflow_in_loop_U0_img_data_stream_2_V_read;

assign m_axi_pMemPort_ARADDR = 32'd0;

assign m_axi_pMemPort_ARBURST = 2'd0;

assign m_axi_pMemPort_ARCACHE = 4'd0;

assign m_axi_pMemPort_ARID = 1'd0;

assign m_axi_pMemPort_ARLEN = 32'd0;

assign m_axi_pMemPort_ARLOCK = 2'd0;

assign m_axi_pMemPort_ARPROT = 3'd0;

assign m_axi_pMemPort_ARQOS = 4'd0;

assign m_axi_pMemPort_ARREGION = 4'd0;

assign m_axi_pMemPort_ARSIZE = 3'd0;

assign m_axi_pMemPort_ARUSER = 1'd0;

assign m_axi_pMemPort_ARVALID = 1'b0;

assign m_axi_pMemPort_AWADDR = dataflow_in_loop_U0_m_axi_pMemPort_AWADDR;

assign m_axi_pMemPort_AWBURST = dataflow_in_loop_U0_m_axi_pMemPort_AWBURST;

assign m_axi_pMemPort_AWCACHE = dataflow_in_loop_U0_m_axi_pMemPort_AWCACHE;

assign m_axi_pMemPort_AWID = dataflow_in_loop_U0_m_axi_pMemPort_AWID;

assign m_axi_pMemPort_AWLEN = dataflow_in_loop_U0_m_axi_pMemPort_AWLEN;

assign m_axi_pMemPort_AWLOCK = dataflow_in_loop_U0_m_axi_pMemPort_AWLOCK;

assign m_axi_pMemPort_AWPROT = dataflow_in_loop_U0_m_axi_pMemPort_AWPROT;

assign m_axi_pMemPort_AWQOS = dataflow_in_loop_U0_m_axi_pMemPort_AWQOS;

assign m_axi_pMemPort_AWREGION = dataflow_in_loop_U0_m_axi_pMemPort_AWREGION;

assign m_axi_pMemPort_AWSIZE = dataflow_in_loop_U0_m_axi_pMemPort_AWSIZE;

assign m_axi_pMemPort_AWUSER = dataflow_in_loop_U0_m_axi_pMemPort_AWUSER;

assign m_axi_pMemPort_AWVALID = dataflow_in_loop_U0_m_axi_pMemPort_AWVALID;

assign m_axi_pMemPort_BREADY = dataflow_in_loop_U0_m_axi_pMemPort_BREADY;

assign m_axi_pMemPort_RREADY = 1'b0;

assign m_axi_pMemPort_WDATA = dataflow_in_loop_U0_m_axi_pMemPort_WDATA;

assign m_axi_pMemPort_WID = dataflow_in_loop_U0_m_axi_pMemPort_WID;

assign m_axi_pMemPort_WLAST = dataflow_in_loop_U0_m_axi_pMemPort_WLAST;

assign m_axi_pMemPort_WSTRB = dataflow_in_loop_U0_m_axi_pMemPort_WSTRB;

assign m_axi_pMemPort_WUSER = dataflow_in_loop_U0_m_axi_pMemPort_WUSER;

assign m_axi_pMemPort_WVALID = dataflow_in_loop_U0_m_axi_pMemPort_WVALID;

endmodule //dataflow_parent_loop_1
