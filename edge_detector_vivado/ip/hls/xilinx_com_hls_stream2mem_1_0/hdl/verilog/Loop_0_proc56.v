// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_0_proc56 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        img_data_stream_0_V_dout,
        img_data_stream_0_V_empty_n,
        img_data_stream_0_V_read,
        img_data_stream_1_V_dout,
        img_data_stream_1_V_empty_n,
        img_data_stream_1_V_read,
        img_data_stream_2_V_dout,
        img_data_stream_2_V_empty_n,
        img_data_stream_2_V_read,
        cacheBuff1_i_din,
        cacheBuff1_i_full_n,
        cacheBuff1_i_write,
        r,
        row,
        img_cols_V_out_din,
        img_cols_V_out_full_n,
        img_cols_V_out_write,
        r_out_din,
        r_out_full_n,
        r_out_write,
        row_out_din,
        row_out_full_n,
        row_out_write,
        index_out_din,
        index_out_full_n,
        index_out_write,
        index
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [7:0] img_data_stream_0_V_dout;
input   img_data_stream_0_V_empty_n;
output   img_data_stream_0_V_read;
input  [7:0] img_data_stream_1_V_dout;
input   img_data_stream_1_V_empty_n;
output   img_data_stream_1_V_read;
input  [7:0] img_data_stream_2_V_dout;
input   img_data_stream_2_V_empty_n;
output   img_data_stream_2_V_read;
output  [31:0] cacheBuff1_i_din;
input   cacheBuff1_i_full_n;
output   cacheBuff1_i_write;
input  [31:0] r;
input  [30:0] row;
output  [31:0] img_cols_V_out_din;
input   img_cols_V_out_full_n;
output   img_cols_V_out_write;
output  [31:0] r_out_din;
input   r_out_full_n;
output   r_out_write;
output  [30:0] row_out_din;
input   row_out_full_n;
output   row_out_write;
output  [31:0] index_out_din;
input   index_out_full_n;
output   index_out_write;
input  [31:0] index;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_data_stream_0_V_read;
reg img_data_stream_1_V_read;
reg img_data_stream_2_V_read;
reg[31:0] cacheBuff1_i_din;
reg cacheBuff1_i_write;
reg img_cols_V_out_write;
reg r_out_write;
reg row_out_write;
reg index_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_data_stream_0_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_9_fu_356_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    img_data_stream_1_V_blk_n;
reg    img_data_stream_2_V_blk_n;
reg    cacheBuff1_i_blk_n;
reg    img_cols_V_out_blk_n;
reg    r_out_blk_n;
reg    row_out_blk_n;
reg    index_out_blk_n;
reg   [7:0] reg_265;
reg    ap_block_state2;
reg    ap_block_state3;
reg   [7:0] reg_269;
reg    ap_block_state4;
wire   [31:0] tmp_8_fu_348_p3;
reg   [31:0] tmp_8_reg_405;
reg    ap_block_state1;
reg   [7:0] tmp_22_reg_413;
wire   [31:0] col_fu_361_p2;
reg   [31:0] col_reg_418;
reg   [31:0] col_i_i_i_reg_254;
reg    ap_block_state5;
wire   [31:0] tmp_23_i_i_i_fu_367_p5;
wire   [31:0] tmp_35_i_i_i_fu_379_p5;
wire   [31:0] tmp_47_i_i_i_fu_392_p5;
wire   [31:0] p_read_op_op_fu_286_p2;
wire   [31:0] p_neg_fu_300_p2;
wire   [29:0] p_lshr_fu_306_p4;
wire   [0:0] tmp_4_fu_292_p3;
wire   [29:0] p_neg_t_fu_316_p2;
wire   [29:0] tmp_5_fu_322_p4;
wire   [0:0] tmp_fu_278_p3;
wire   [29:0] tmp_6_fu_332_p3;
wire   [29:0] tmp_7_fu_340_p3;
reg   [4:0] ap_NS_fsm;
reg    ap_condition_123;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        col_i_i_i_reg_254 <= col_reg_418;
    end else if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_i_i_i_reg_254 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        col_reg_418 <= col_fu_361_p2;
        tmp_22_reg_413 <= img_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_265 <= img_data_stream_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_269 <= img_data_stream_2_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_8_reg_405[31 : 2] <= tmp_8_fu_348_p3[31 : 2];
    end
end

always @ (*) begin
    if ((~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        cacheBuff1_i_blk_n = cacheBuff1_i_full_n;
    end else begin
        cacheBuff1_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_123)) begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            cacheBuff1_i_din = tmp_47_i_i_i_fu_392_p5;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            cacheBuff1_i_din = tmp_35_i_i_i_fu_379_p5;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            cacheBuff1_i_din = tmp_23_i_i_i_fu_367_p5;
        end else begin
            cacheBuff1_i_din = 'bx;
        end
    end else begin
        cacheBuff1_i_din = 'bx;
    end
end

always @ (*) begin
    if (((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        cacheBuff1_i_write = 1'b1;
    end else begin
        cacheBuff1_i_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_cols_V_out_blk_n = img_cols_V_out_full_n;
    end else begin
        img_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_cols_V_out_write = 1'b1;
    end else begin
        img_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        img_data_stream_0_V_blk_n = img_data_stream_0_V_empty_n;
    end else begin
        img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        img_data_stream_0_V_read = 1'b1;
    end else begin
        img_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        img_data_stream_1_V_blk_n = img_data_stream_1_V_empty_n;
    end else begin
        img_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        img_data_stream_1_V_read = 1'b1;
    end else begin
        img_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        img_data_stream_2_V_blk_n = img_data_stream_2_V_empty_n;
    end else begin
        img_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        img_data_stream_2_V_read = 1'b1;
    end else begin
        img_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        index_out_blk_n = index_out_full_n;
    end else begin
        index_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        index_out_write = 1'b1;
    end else begin
        index_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_out_blk_n = r_out_full_n;
    end else begin
        r_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_out_write = 1'b1;
    end else begin
        r_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        row_out_blk_n = row_out_full_n;
    end else begin
        row_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        row_out_write = 1'b1;
    end else begin
        row_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0))) & (tmp_9_fu_356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((index_out_full_n == 1'b0) | (row_out_full_n == 1'b0) | (r_out_full_n == 1'b0) | (img_cols_V_out_full_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = (((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((tmp_9_fu_356_p2 == 1'd0) & (img_data_stream_0_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3 = ((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_123 = ~((cacheBuff1_i_full_n == 1'b0) | (img_data_stream_2_V_empty_n == 1'b0) | (img_data_stream_1_V_empty_n == 1'b0) | (img_data_stream_0_V_empty_n == 1'b0));
end

assign col_fu_361_p2 = (col_i_i_i_reg_254 + 32'd4);

assign img_cols_V_out_din = p_read;

assign index_out_din = index;

assign p_lshr_fu_306_p4 = {{p_neg_fu_300_p2[31:2]}};

assign p_neg_fu_300_p2 = ($signed(32'd4294967293) - $signed(p_read));

assign p_neg_t_fu_316_p2 = (30'd0 - p_lshr_fu_306_p4);

assign p_read_op_op_fu_286_p2 = (p_read + 32'd3);

assign r_out_din = r;

assign row_out_din = row;

assign tmp_23_i_i_i_fu_367_p5 = {{{{img_data_stream_0_V_dout}, {reg_269}}, {reg_265}}, {tmp_22_reg_413}};

assign tmp_35_i_i_i_fu_379_p5 = {{{{img_data_stream_1_V_dout}, {img_data_stream_0_V_dout}}, {reg_269}}, {reg_265}};

assign tmp_47_i_i_i_fu_392_p5 = {{{{img_data_stream_2_V_dout}, {img_data_stream_1_V_dout}}, {img_data_stream_0_V_dout}}, {reg_269}};

assign tmp_4_fu_292_p3 = p_read_op_op_fu_286_p2[32'd31];

assign tmp_5_fu_322_p4 = {{p_read_op_op_fu_286_p2[31:2]}};

assign tmp_6_fu_332_p3 = ((tmp_4_fu_292_p3[0:0] === 1'b1) ? p_neg_t_fu_316_p2 : tmp_5_fu_322_p4);

assign tmp_7_fu_340_p3 = ((tmp_fu_278_p3[0:0] === 1'b1) ? 30'd0 : tmp_6_fu_332_p3);

assign tmp_8_fu_348_p3 = {{tmp_7_fu_340_p3}, {2'd0}};

assign tmp_9_fu_356_p2 = ((col_i_i_i_reg_254 == tmp_8_reg_405) ? 1'b1 : 1'b0);

assign tmp_fu_278_p3 = p_read[32'd31];

always @ (posedge ap_clk) begin
    tmp_8_reg_405[1:0] <= 2'b00;
end

endmodule //Loop_0_proc56
