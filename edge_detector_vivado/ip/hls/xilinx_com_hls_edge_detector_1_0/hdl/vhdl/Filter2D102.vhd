-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D102 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D102 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_43A : STD_LOGIC_VECTOR (10 downto 0) := "10000111010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_437 : STD_LOGIC_VECTOR (10 downto 0) := "10000110111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_782 : STD_LOGIC_VECTOR (10 downto 0) := "11110000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_780 : STD_LOGIC_VECTOR (11 downto 0) := "011110000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_EFE : STD_LOGIC_VECTOR (11 downto 0) := "111011111110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1049 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_reg_1049 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1000 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_991 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_267 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond389_i_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_284_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_986 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_not_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_not_reg_995 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1005 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_153_1_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_153_1_reg_1009 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1013 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_336_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_reg_1020 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_fu_340_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_1_t_reg_1025 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_fu_346_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_8_2_t_reg_1030 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op107_read_state5 : BOOLEAN;
    signal ap_predicate_op118_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter2_exitcond388_i_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_362_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_384_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1044 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_i_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_430_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_reg_1054 : STD_LOGIC_VECTOR (11 downto 0);
    signal sel_tmp8_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_1060 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1065 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_brmerge_reg_1065 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_493_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_reg_1076 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_3_addr_reg_1081 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1087 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1093 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_buf_0_val_0_0_fu_539_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1099 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_558_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1104 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_577_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1109 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_620_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_1114 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_631_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_1119 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_642_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_reg_1124 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_739_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_reg_1129 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_7_2_2_fu_751_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_2_2_reg_1134 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp19_fu_761_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp19_reg_1139 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp21_fu_767_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp21_reg_1144 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp22_fu_773_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp22_reg_1149 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_fu_779_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_reg_1154 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_900_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1159 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_256 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_5_fu_497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_653_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_658_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_663_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_302_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_368_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_3_cast_fu_352_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_390_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_424_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_not_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_2_fu_472_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_3_fu_477_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_fu_483_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_assign_cast8_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_1_fu_522_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_527_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_546_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_565_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_197_0_cast_fu_677_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal OP1_V_0_2_cast_fu_681_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_16_0_2_fu_685_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_1_fu_695_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_717_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_725_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_7_1_2_fu_729_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP1_V_2_2_cast_fu_747_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_16_0_2_cast_fu_691_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_197_1_2_cast_fu_735_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_197_2_cast_cast_fu_743_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_197_1_cast_cast_fu_703_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_fu_711_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_707_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_757_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_197_2_2_cast_fu_824_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp21_cast_fu_827_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp20_fu_830_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_fu_836_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp23_fu_849_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isneg_fu_841_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_858_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal not_i_i_i_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_82_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_853_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_358 : BOOLEAN;
    signal ap_condition_352 : BOOLEAN;

    component edge_detector_muxhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D102_k_bufeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D102_k_bufeOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1081,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D102_k_bufeOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1087,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D102_k_bufeOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1093,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    edge_detector_muxhbi_U34 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_160,
        din1 => right_border_buf_0_1_fu_164,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_fu_522_p2,
        dout => tmp_6_fu_527_p5);

    edge_detector_muxhbi_U35 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_172,
        din1 => right_border_buf_0_4_fu_176,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_fu_522_p2,
        dout => tmp_11_fu_546_p5);

    edge_detector_muxhbi_U36 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_180,
        din1 => right_border_buf_0_2_fu_168,
        din2 => ap_const_lv8_0,
        din3 => col_assign_1_fu_522_p2,
        dout => tmp_13_fu_565_p5);

    edge_detector_muxhbi_U37 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_539_p3,
        din1 => col_buf_0_val_1_0_fu_558_p3,
        din2 => col_buf_0_val_2_0_fu_577_p3,
        din3 => tmp_8_reg_1020,
        dout => tmp_14_fu_620_p5);

    edge_detector_muxhbi_U38 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_539_p3,
        din1 => col_buf_0_val_1_0_fu_558_p3,
        din2 => col_buf_0_val_2_0_fu_577_p3,
        din3 => row_assign_8_1_t_reg_1025,
        dout => tmp_15_fu_631_p5);

    edge_detector_muxhbi_U39 : component edge_detector_muxhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_539_p3,
        din1 => col_buf_0_val_1_0_fu_558_p3,
        din2 => col_buf_0_val_2_0_fu_577_p3,
        din3 => row_assign_8_2_t_reg_1030,
        dout => tmp_16_fu_642_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond389_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_356_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state5)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond389_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_356_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_267 <= j_V_fu_362_p2;
            elsif (((exitcond389_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_267 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_256 <= i_V_reg_986;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_256 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_356_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_1044 <= ImagLoc_x_fu_384_p2;
                brmerge_reg_1065 <= brmerge_fu_462_p2;
                or_cond_i_i_reg_1049 <= or_cond_i_i_fu_410_p2;
                or_cond_i_reg_1072 <= or_cond_i_fu_467_p2;
                p_p2_i_i_reg_1054 <= p_p2_i_i_fu_430_p3;
                sel_tmp8_reg_1060 <= sel_tmp8_fu_456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_brmerge_reg_1065 <= brmerge_reg_1065;
                ap_reg_pp0_iter1_exitcond388_i_reg_1035 <= exitcond388_i_reg_1035;
                ap_reg_pp0_iter1_or_cond_i_i_reg_1049 <= or_cond_i_i_reg_1049;
                ap_reg_pp0_iter1_or_cond_i_reg_1072 <= or_cond_i_reg_1072;
                exitcond388_i_reg_1035 <= exitcond388_i_fu_356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond388_i_reg_1035 <= ap_reg_pp0_iter1_exitcond388_i_reg_1035;
                ap_reg_pp0_iter2_or_cond_i_reg_1072 <= ap_reg_pp0_iter1_or_cond_i_reg_1072;
                ap_reg_pp0_iter3_or_cond_i_reg_1072 <= ap_reg_pp0_iter2_or_cond_i_reg_1072;
                ap_reg_pp0_iter4_or_cond_i_reg_1072 <= ap_reg_pp0_iter3_or_cond_i_reg_1072;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_1099 <= col_buf_0_val_0_0_fu_539_p3;
                col_buf_0_val_1_0_reg_1104 <= col_buf_0_val_1_0_fu_558_p3;
                col_buf_0_val_2_0_reg_1109 <= col_buf_0_val_2_0_fu_577_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_986 <= i_V_fu_284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1000 <= icmp_fu_312_p2;
                row_assign_8_1_t_reg_1025 <= row_assign_8_1_t_fu_340_p2;
                row_assign_8_2_t_reg_1030 <= row_assign_8_2_t_fu_346_p2;
                tmp_109_not_reg_995 <= tmp_109_not_fu_296_p2;
                tmp_153_1_reg_1009 <= tmp_153_1_fu_324_p2;
                tmp_3_reg_1005 <= tmp_3_fu_318_p2;
                tmp_4_reg_1013 <= tmp_4_fu_330_p2;
                tmp_8_reg_1020 <= tmp_8_fu_336_p1;
                tmp_s_reg_991 <= tmp_s_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1081 <= tmp_5_fu_497_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1087 <= tmp_5_fu_497_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1093 <= tmp_5_fu_497_p1(11 - 1 downto 0);
                tmp_22_reg_1076 <= tmp_22_fu_493_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_or_cond_i_reg_1072 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_reg_1159 <= p_Val2_s_fu_900_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_or_cond_i_reg_1072 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_7_2_2_reg_1134 <= r_V_7_2_2_fu_751_p2;
                tmp19_reg_1139 <= tmp19_fu_761_p2;
                tmp21_reg_1144 <= tmp21_fu_767_p2;
                tmp22_reg_1149 <= tmp22_fu_773_p2;
                tmp24_reg_1154 <= tmp24_fu_779_p2;
                    tmp_28_reg_1129(7 downto 1) <= tmp_28_fu_739_p1(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_164 <= right_border_buf_0_s_fu_160;
                right_border_buf_0_2_fu_168 <= right_border_buf_0_5_fu_180;
                right_border_buf_0_3_fu_172 <= col_buf_0_val_1_0_fu_558_p3;
                right_border_buf_0_4_fu_176 <= right_border_buf_0_3_fu_172;
                right_border_buf_0_5_fu_180 <= col_buf_0_val_2_0_fu_577_p3;
                right_border_buf_0_s_fu_160 <= col_buf_0_val_0_0_fu_539_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_140 <= src_kernel_win_0_va_fu_136;
                src_kernel_win_0_va_2_fu_144 <= src_kernel_win_0_va_7_fu_658_p3;
                src_kernel_win_0_va_3_fu_148 <= src_kernel_win_0_va_2_fu_144;
                src_kernel_win_0_va_4_fu_152 <= src_kernel_win_0_va_8_fu_663_p3;
                src_kernel_win_0_va_5_fu_156 <= src_kernel_win_0_va_4_fu_152;
                src_kernel_win_0_va_fu_136 <= src_kernel_win_0_va_6_fu_653_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_1013 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_14_reg_1114 <= tmp_14_fu_620_p5;
                tmp_15_reg_1119 <= tmp_15_fu_631_p5;
                tmp_16_reg_1124 <= tmp_16_fu_642_p5;
            end if;
        end if;
    end process;
    tmp_28_reg_1129(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, exitcond389_i_fu_278_p2, ap_CS_fsm_state2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_384_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_3_cast_fu_352_p1));
    OP1_V_0_2_cast_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_fu_663_p3),9));
    OP1_V_2_2_cast_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_fu_653_p3),9));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1072, ap_predicate_op107_read_state5, ap_predicate_op118_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter4_or_cond_i_reg_1072 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op118_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1072, ap_predicate_op107_read_state5, ap_predicate_op118_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter4_or_cond_i_reg_1072 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op118_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1072, ap_predicate_op107_read_state5, ap_predicate_op118_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter4_or_cond_i_reg_1072 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op118_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op107_read_state5, ap_predicate_op118_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op118_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter4_or_cond_i_reg_1072)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_reg_pp0_iter4_or_cond_i_reg_1072 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_352_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_3_reg_1005)
    begin
                ap_condition_352 <= ((tmp_3_reg_1005 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0));
    end process;


    ap_condition_358_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_153_1_reg_1009)
    begin
                ap_condition_358 <= ((tmp_153_1_reg_1009 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter2_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond389_i_fu_278_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op107_read_state5_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000)
    begin
                ap_predicate_op107_read_state5 <= ((ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0));
    end process;


    ap_predicate_op118_read_state5_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_s_reg_991)
    begin
                ap_predicate_op118_read_state5 <= ((tmp_s_reg_991 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_fu_462_p2 <= (tmp_1_fu_404_p2 or tmp_109_not_reg_995);
    col_assign_1_fu_522_p2 <= (tmp_22_reg_1076 xor ap_const_lv2_3);
        col_assign_cast8_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_fu_483_p3),32));

    col_buf_0_val_0_0_fu_539_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter1_brmerge_reg_1065(0) = '1') else 
        tmp_6_fu_527_p5;
    col_buf_0_val_1_0_fu_558_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter1_brmerge_reg_1065(0) = '1') else 
        tmp_11_fu_546_p5;
    col_buf_0_val_2_0_fu_577_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter1_brmerge_reg_1065(0) = '1') else 
        tmp_13_fu_565_p5;
    exitcond388_i_fu_356_p2 <= "1" when (t_V_2_reg_267 = ap_const_lv11_782) else "0";
    exitcond389_i_fu_278_p2 <= "1" when (t_V_reg_256 = ap_const_lv11_43A) else "0";
    i_V_fu_284_p2 <= std_logic_vector(unsigned(t_V_reg_256) + unsigned(ap_const_lv11_1));
    icmp1_fu_378_p2 <= "0" when (tmp_10_fu_368_p4 = ap_const_lv10_0) else "1";
    icmp_fu_312_p2 <= "0" when (tmp_7_fu_302_p4 = ap_const_lv10_0) else "1";

    internal_ap_ready_assign_proc : process(exitcond389_i_fu_278_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    isneg_fu_841_p3 <= p_Val2_1_fu_836_p2(10 downto 10);
    j_V_fu_362_p2 <= std_logic_vector(unsigned(t_V_2_reg_267) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_5_fu_497_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_3_reg_1005, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_3_reg_1005 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_3_reg_1005, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_3_reg_1005 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_5_fu_497_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_153_1_reg_1009, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_153_1_reg_1009 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op118_read_state5, k_buf_0_val_3_q0, ap_condition_358)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op118_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_358)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_153_1_reg_1009, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_153_1_reg_1009 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_5_fu_497_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_3_reg_1005, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_3_reg_1005 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op118_read_state5, k_buf_0_val_4_q0, ap_condition_352)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op118_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_352)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_3_reg_1005, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_3_reg_1005 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_fu_874_p2 <= "0" when (tmp_17_fu_858_p4 = ap_const_lv3_0) else "1";
    or_cond_i_fu_467_p2 <= (icmp_reg_1000 and icmp1_fu_378_p2);
    or_cond_i_i_fu_410_p2 <= (tmp_1_fu_404_p2 and rev_fu_398_p2);
    overflow_fu_880_p2 <= (tmp_i_i_fu_868_p2 and not_i_i_i_fu_874_p2);
        p_Val2_16_0_2_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_16_0_2_fu_685_p2),11));

    p_Val2_16_0_2_fu_685_p2 <= std_logic_vector(unsigned(tmp_197_0_cast_fu_677_p1) - unsigned(OP1_V_0_2_cast_fu_681_p1));
    p_Val2_1_fu_836_p2 <= std_logic_vector(unsigned(tmp19_reg_1139) + unsigned(tmp20_fu_830_p2));
    p_Val2_2_fu_853_p2 <= std_logic_vector(unsigned(tmp22_reg_1149) + unsigned(tmp23_fu_849_p2));
    p_Val2_s_fu_900_p3 <= 
        p_mux_i_i_cast_fu_886_p3 when (tmp_i_i_82_fu_894_p2(0) = '1') else 
        p_Val2_2_fu_853_p2;
    p_assign_1_fu_424_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_3_cast_fu_352_p1));
    p_assign_2_fu_472_p2 <= std_logic_vector(signed(ap_const_lv12_EFE) - signed(p_p2_i_i_reg_1054));
    p_assign_3_fu_477_p3 <= 
        ImagLoc_x_reg_1044 when (or_cond_i_i_reg_1049(0) = '1') else 
        p_assign_2_fu_472_p2;

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1072)
    begin
        if (((ap_reg_pp0_iter4_or_cond_i_reg_1072 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_s_reg_1159;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_or_cond_i_reg_1072 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_886_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_868_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i_i_fu_430_p3 <= 
        p_assign_1_fu_424_p2 when (tmp_21_fu_416_p3(0) = '1') else 
        ImagLoc_x_fu_384_p2;
    p_shl_cast_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_717_p3),10));
    p_shl_fu_717_p3 <= (src_kernel_win_0_va_7_fu_658_p3 & ap_const_lv1_0);

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_reg_1035, ap_reg_pp0_iter1_or_cond_i_i_reg_1049, icmp_reg_1000, tmp_s_reg_991)
    begin
        if ((((tmp_s_reg_991 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_or_cond_i_i_reg_1049 = ap_const_lv1_1) and (icmp_reg_1000 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op107_read_state5, ap_predicate_op118_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op118_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op107_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_7_1_2_fu_729_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(p_shl_cast_fu_725_p1));
    r_V_7_1_fu_695_p3 <= (src_kernel_win_0_va_3_fu_148 & ap_const_lv1_0);
    r_V_7_2_2_fu_751_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_2_2_cast_fu_747_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev_fu_398_p2 <= (tmp_12_fu_390_p3 xor ap_const_lv1_1);
    row_assign_8_1_t_fu_340_p2 <= (tmp_8_fu_336_p1 xor ap_const_lv2_1);
    row_assign_8_2_t_fu_346_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_8_fu_336_p1));
    sel_tmp7_fu_450_p2 <= (tmp_12_fu_390_p3 or tmp_11_not_fu_444_p2);
    sel_tmp8_fu_456_p2 <= (tmp_2_fu_438_p2 and sel_tmp7_fu_450_p2);
    src_kernel_win_0_va_6_fu_653_p3 <= 
        tmp_14_reg_1114 when (tmp_4_reg_1013(0) = '1') else 
        col_buf_0_val_0_0_reg_1099;
    src_kernel_win_0_va_7_fu_658_p3 <= 
        tmp_15_reg_1119 when (tmp_4_reg_1013(0) = '1') else 
        col_buf_0_val_1_0_reg_1104;
    src_kernel_win_0_va_8_fu_663_p3 <= 
        tmp_16_reg_1124 when (tmp_4_reg_1013(0) = '1') else 
        col_buf_0_val_2_0_reg_1109;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    t_V_3_cast_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_267),12));
    tmp19_fu_761_p2 <= std_logic_vector(signed(p_Val2_16_0_2_cast_fu_691_p1) + signed(tmp_197_1_2_cast_fu_735_p1));
    tmp20_fu_830_p2 <= std_logic_vector(signed(tmp_197_2_2_cast_fu_824_p1) + signed(tmp21_cast_fu_827_p1));
    tmp21_cast_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp21_reg_1144),11));
    tmp21_fu_767_p2 <= std_logic_vector(unsigned(tmp_197_2_cast_cast_fu_743_p1) + unsigned(tmp_197_1_cast_cast_fu_703_p1));
    tmp22_fu_773_p2 <= std_logic_vector(unsigned(tmp_27_fu_711_p2) + unsigned(tmp_25_fu_707_p1));
    tmp23_fu_849_p2 <= std_logic_vector(unsigned(tmp_28_reg_1129) + unsigned(tmp24_reg_1154));
    tmp24_fu_779_p2 <= std_logic_vector(unsigned(tmp_29_fu_757_p1) + unsigned(src_kernel_win_0_va_1_fu_140));
    tmp_109_not_fu_296_p2 <= "1" when (unsigned(t_V_reg_256) > unsigned(ap_const_lv11_437)) else "0";
    tmp_10_fu_368_p4 <= t_V_2_reg_267(10 downto 1);
    tmp_11_not_fu_444_p2 <= (tmp_1_fu_404_p2 xor ap_const_lv1_1);
    tmp_12_fu_390_p3 <= ImagLoc_x_fu_384_p2(11 downto 11);
    tmp_153_1_fu_324_p2 <= "1" when (t_V_reg_256 = ap_const_lv11_0) else "0";
    tmp_17_fu_858_p4 <= p_Val2_1_fu_836_p2(10 downto 8);
    tmp_197_0_cast_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_156),9));
        tmp_197_1_2_cast_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_1_2_fu_729_p2),11));

    tmp_197_1_cast_cast_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_7_1_fu_695_p3),10));
        tmp_197_2_2_cast_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_2_2_reg_1134),11));

    tmp_197_2_cast_cast_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_140),10));
    tmp_1_fu_404_p2 <= "1" when (signed(ImagLoc_x_fu_384_p2) < signed(ap_const_lv12_780)) else "0";
    tmp_21_fu_416_p3 <= ImagLoc_x_fu_384_p2(11 downto 11);
    tmp_22_fu_493_p1 <= x_fu_483_p3(2 - 1 downto 0);
    tmp_25_fu_707_p1 <= p_Val2_16_0_2_fu_685_p2(8 - 1 downto 0);
    tmp_27_fu_711_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_3_fu_148),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_28_fu_739_p1 <= r_V_7_1_2_fu_729_p2(8 - 1 downto 0);
    tmp_29_fu_757_p1 <= r_V_7_2_2_fu_751_p2(8 - 1 downto 0);
    tmp_2_fu_438_p2 <= "1" when (signed(p_p2_i_i_fu_430_p3) < signed(ap_const_lv12_780)) else "0";
    tmp_3_fu_318_p2 <= "1" when (t_V_reg_256 = ap_const_lv11_1) else "0";
    tmp_4_fu_330_p2 <= "1" when (unsigned(t_V_reg_256) > unsigned(ap_const_lv11_438)) else "0";
    tmp_5_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast8_fu_489_p1),64));
    tmp_7_fu_302_p4 <= t_V_reg_256(10 downto 1);
    tmp_8_fu_336_p1 <= t_V_reg_256(2 - 1 downto 0);
    tmp_i_i_82_fu_894_p2 <= (overflow_fu_880_p2 or isneg_fu_841_p3);
    tmp_i_i_fu_868_p2 <= (isneg_fu_841_p3 xor ap_const_lv1_1);
    tmp_s_fu_290_p2 <= "1" when (unsigned(t_V_reg_256) < unsigned(ap_const_lv11_438)) else "0";
    x_fu_483_p3 <= 
        p_p2_i_i_reg_1054 when (sel_tmp8_reg_1060(0) = '1') else 
        p_assign_3_fu_477_p3;
end behav;
