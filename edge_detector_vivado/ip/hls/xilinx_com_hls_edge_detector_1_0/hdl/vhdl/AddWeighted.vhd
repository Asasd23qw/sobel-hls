-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AddWeighted is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src1_data_stream_V_empty_n : IN STD_LOGIC;
    src1_data_stream_V_read : OUT STD_LOGIC;
    src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src2_data_stream_V_empty_n : IN STD_LOGIC;
    src2_data_stream_V_read : OUT STD_LOGIC;
    dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of AddWeighted is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src1_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal src2_data_stream_V_blk_n : STD_LOGIC;
    signal dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter30_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_5_reg_190 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_i_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_235_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_949 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter23_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter24_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter25_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter26_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter27_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_exitcond_i_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_247_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_74_reg_963 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_reg_968 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_i_reg_983 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_i_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t1_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t2_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_201_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_i_reg_1003 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_1008 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter27_tmp_i_i_i_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_tmp_i_i_i_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_tmp_i_i_i_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_99_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_99_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter27_tmp_i_i_i_99_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_tmp_i_i_i_99_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_tmp_i_i_i_99_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_294_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_reg_1026 : STD_LOGIC_VECTOR (62 downto 0);
    signal isneg_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter27_isneg_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_isneg_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_isneg_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_320_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_62_reg_1041 : STD_LOGIC_VECTOR (51 downto 0);
    signal F2_fu_324_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1046 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_pp0_iter27_F2_reg_1046 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_pp0_iter28_F2_reg_1046 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_i_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter27_tmp_3_i_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_tmp_3_i_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_353_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Val2_s_reg_1064 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_reg_pp0_iter28_p_Val2_s_reg_1064 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_8_i_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_tmp_8_i_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_tmp_8_i_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter30_tmp_8_i_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_tmp_1_i_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_2_fu_375_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_1085 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_pp0_iter28_F2_2_reg_1085 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_pp0_iter29_F2_2_reg_1085 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_64_fu_382_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_reg_1092 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter28_tmp_64_reg_1092 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter29_tmp_64_reg_1092 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_icmp_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_icmp_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_430_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_12_reg_1104 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_446_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_reg_1115 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_reg_1121 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_reg_1127 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_tmp_73_reg_1127 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_reg_1132 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_tmp_23_i_reg_1132 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_fu_482_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_i_reg_1139 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_fu_486_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_reg_1144 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_27_i_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_i_reg_1150 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_i_fu_588_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp9_i_reg_1155 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_demorgan_i_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_demorgan_i_reg_1160 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_i_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_i_i_reg_1165 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_reg_1171 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1177 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_reg_1191 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_reg_1196 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_1201 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_i_reg_1206 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_14_fu_714_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_14_reg_1212 : STD_LOGIC_VECTOR (7 downto 0);
    signal underflow_fu_835_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_1218 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_121_demorgan_i_i_i_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_121_demorgan_i_i_i_reg_1224 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal t_V_reg_179 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_220_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_10_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_264_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_274_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal d_assign_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_306_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_i_fu_316_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i1_fu_336_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_s_fu_343_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_347_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_2_i_fu_370_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_65_fu_386_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal F2_2_cast_i_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_fu_410_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_11_i_fu_414_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_5_i_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_419_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_0_i_i_i6_i_fu_423_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pos2_fu_451_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos2_cast_i_fu_456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i_fu_502_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_cast_i_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_fu_518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_fu_525_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_13_fu_529_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_548_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp7_i_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_i_fu_569_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_not_i_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp28_i_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_cast_i_fu_623_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_fu_636_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_21_i_fu_640_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_645_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_661_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_23_i_not_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_i_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_696_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_i_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_i_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_fu_699_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rev4_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond115_i_i_i_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_i_s_fu_739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond117_i_i_i_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_i_fu_769_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_119_i_i_i_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_i_i_i_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_i_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_s_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_i_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_fu_721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp41_i_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_i_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i2_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_i_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_121_demorgan_i_i_no_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_not_i_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_demorgan_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_i_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp51_i_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_demorgan_i_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_demorgan_i_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp55_i_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp56_i_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_0_i_i_mux_fu_879_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp52_i_fu_912_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_201_ce : STD_LOGIC;
    signal grp_fu_205_ce : STD_LOGIC;
    signal grp_fu_210_ce : STD_LOGIC;
    signal grp_fu_215_ce : STD_LOGIC;
    signal grp_fu_220_ce : STD_LOGIC;
    signal grp_fu_223_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component edge_detector_fadlbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_detector_fmumb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_detector_sitncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component edge_detector_fpeocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    edge_detector_fadlbW_U51 : component edge_detector_fadlbW
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => t1_reg_993,
        din1 => t2_reg_998,
        ce => grp_fu_201_ce,
        dout => grp_fu_201_p2);

    edge_detector_fadlbW_U52 : component edge_detector_fadlbW
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_42_i_reg_1003,
        din1 => ap_const_lv32_0,
        ce => grp_fu_205_ce,
        dout => grp_fu_205_p2);

    edge_detector_fmumb6_U53 : component edge_detector_fmumb6
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_i_reg_983,
        din1 => ap_const_lv32_3F000000,
        ce => grp_fu_210_ce,
        dout => grp_fu_210_p2);

    edge_detector_fmumb6_U54 : component edge_detector_fmumb6
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_41_i_reg_988,
        din1 => ap_const_lv32_3F000000,
        ce => grp_fu_215_ce,
        dout => grp_fu_215_p2);

    edge_detector_sitncg_U55 : component edge_detector_sitncg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_220_p0,
        ce => grp_fu_220_ce,
        dout => grp_fu_220_p1);

    edge_detector_sitncg_U56 : component edge_detector_sitncg
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_223_p0,
        ce => grp_fu_223_ce,
        dout => grp_fu_223_p1);

    edge_detector_fpeocq_U57 : component edge_detector_fpeocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => sum_reg_1008,
        dout => d_assign_fu_226_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                elsif (((exitcond1_i_fu_229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    t_V_5_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_241_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_5_reg_190 <= j_V_fu_247_p2;
            elsif (((exitcond1_i_fu_229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_5_reg_190 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                t_V_reg_179 <= i_V_reg_949;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_179 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter26_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_2_reg_1085 <= F2_2_fu_375_p3;
                icmp_reg_1098 <= icmp_fu_396_p2;
                p_Val2_s_reg_1064 <= p_Val2_s_fu_353_p3;
                tmp_1_i_reg_1079 <= tmp_1_i_fu_365_p2;
                tmp_64_reg_1092 <= tmp_64_fu_382_p1;
                tmp_8_i_reg_1073 <= tmp_8_i_fu_360_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter25_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_reg_1046 <= F2_fu_324_p2;
                isneg_reg_1031 <= ireg_V_fu_290_p1(63 downto 63);
                tmp_3_i_reg_1057 <= tmp_3_i_fu_330_p2;
                tmp_62_reg_1041 <= tmp_62_fu_320_p1;
                tmp_i_i_i_99_reg_1020 <= tmp_i_i_i_99_fu_284_p2;
                tmp_i_i_i_reg_1014 <= tmp_i_i_i_fu_278_p2;
                tmp_reg_1026 <= tmp_fu_294_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter28_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_1_reg_1184 <= Range1_all_ones_1_fu_655_p2;
                Range1_all_zeros_1_reg_1201 <= Range1_all_zeros_1_fu_676_p2;
                Range2_all_ones_reg_1191 <= Range2_all_ones_fu_666_p2;
                carry_1_i_i_i_reg_1165 <= carry_1_i_i_i_fu_617_p2;
                rev_reg_1177 <= rev_fu_631_p2;
                sel_tmp12_demorgan_i_reg_1160 <= sel_tmp12_demorgan_i_fu_596_p2;
                sel_tmp34_i_reg_1206 <= sel_tmp34_i_fu_691_p2;
                sel_tmp9_i_reg_1155 <= sel_tmp9_i_fu_588_p3;
                tmp_18_i_reg_1171 <= tmp_18_i_fu_626_p2;
                tmp_25_i_reg_1196 <= tmp_25_i_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter27_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range2_V_1_reg_1144 <= Range2_V_1_fu_486_p2;
                p_Val2_12_reg_1104 <= p_Val2_12_fu_430_p3;
                pos1_reg_1115 <= pos1_fu_446_p2;
                tmp_23_i_reg_1132 <= tmp_23_i_fu_476_p2;
                    tmp_24_i_reg_1139(31 downto 0) <= tmp_24_i_fu_482_p1(31 downto 0);
                tmp_27_i_reg_1150 <= tmp_27_i_fu_491_p2;
                tmp_68_reg_1109 <= p_Val2_12_fu_430_p3(7 downto 7);
                tmp_71_reg_1121 <= pos1_fu_446_p2(11 downto 11);
                tmp_73_reg_1127 <= pos2_fu_451_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_exitcond_i_reg_954 <= ap_reg_pp0_iter9_exitcond_i_reg_954;
                ap_reg_pp0_iter11_exitcond_i_reg_954 <= ap_reg_pp0_iter10_exitcond_i_reg_954;
                ap_reg_pp0_iter12_exitcond_i_reg_954 <= ap_reg_pp0_iter11_exitcond_i_reg_954;
                ap_reg_pp0_iter13_exitcond_i_reg_954 <= ap_reg_pp0_iter12_exitcond_i_reg_954;
                ap_reg_pp0_iter14_exitcond_i_reg_954 <= ap_reg_pp0_iter13_exitcond_i_reg_954;
                ap_reg_pp0_iter15_exitcond_i_reg_954 <= ap_reg_pp0_iter14_exitcond_i_reg_954;
                ap_reg_pp0_iter16_exitcond_i_reg_954 <= ap_reg_pp0_iter15_exitcond_i_reg_954;
                ap_reg_pp0_iter17_exitcond_i_reg_954 <= ap_reg_pp0_iter16_exitcond_i_reg_954;
                ap_reg_pp0_iter18_exitcond_i_reg_954 <= ap_reg_pp0_iter17_exitcond_i_reg_954;
                ap_reg_pp0_iter19_exitcond_i_reg_954 <= ap_reg_pp0_iter18_exitcond_i_reg_954;
                ap_reg_pp0_iter20_exitcond_i_reg_954 <= ap_reg_pp0_iter19_exitcond_i_reg_954;
                ap_reg_pp0_iter21_exitcond_i_reg_954 <= ap_reg_pp0_iter20_exitcond_i_reg_954;
                ap_reg_pp0_iter22_exitcond_i_reg_954 <= ap_reg_pp0_iter21_exitcond_i_reg_954;
                ap_reg_pp0_iter23_exitcond_i_reg_954 <= ap_reg_pp0_iter22_exitcond_i_reg_954;
                ap_reg_pp0_iter24_exitcond_i_reg_954 <= ap_reg_pp0_iter23_exitcond_i_reg_954;
                ap_reg_pp0_iter25_exitcond_i_reg_954 <= ap_reg_pp0_iter24_exitcond_i_reg_954;
                ap_reg_pp0_iter26_exitcond_i_reg_954 <= ap_reg_pp0_iter25_exitcond_i_reg_954;
                ap_reg_pp0_iter27_F2_reg_1046 <= F2_reg_1046;
                ap_reg_pp0_iter27_exitcond_i_reg_954 <= ap_reg_pp0_iter26_exitcond_i_reg_954;
                ap_reg_pp0_iter27_isneg_reg_1031 <= isneg_reg_1031;
                ap_reg_pp0_iter27_tmp_3_i_reg_1057 <= tmp_3_i_reg_1057;
                ap_reg_pp0_iter27_tmp_i_i_i_99_reg_1020 <= tmp_i_i_i_99_reg_1020;
                ap_reg_pp0_iter27_tmp_i_i_i_reg_1014 <= tmp_i_i_i_reg_1014;
                ap_reg_pp0_iter28_F2_2_reg_1085 <= F2_2_reg_1085;
                ap_reg_pp0_iter28_F2_reg_1046 <= ap_reg_pp0_iter27_F2_reg_1046;
                ap_reg_pp0_iter28_exitcond_i_reg_954 <= ap_reg_pp0_iter27_exitcond_i_reg_954;
                ap_reg_pp0_iter28_icmp_reg_1098 <= icmp_reg_1098;
                ap_reg_pp0_iter28_isneg_reg_1031 <= ap_reg_pp0_iter27_isneg_reg_1031;
                ap_reg_pp0_iter28_p_Val2_s_reg_1064 <= p_Val2_s_reg_1064;
                ap_reg_pp0_iter28_tmp_1_i_reg_1079 <= tmp_1_i_reg_1079;
                ap_reg_pp0_iter28_tmp_3_i_reg_1057 <= ap_reg_pp0_iter27_tmp_3_i_reg_1057;
                ap_reg_pp0_iter28_tmp_64_reg_1092 <= tmp_64_reg_1092;
                ap_reg_pp0_iter28_tmp_8_i_reg_1073 <= tmp_8_i_reg_1073;
                ap_reg_pp0_iter28_tmp_i_i_i_99_reg_1020 <= ap_reg_pp0_iter27_tmp_i_i_i_99_reg_1020;
                ap_reg_pp0_iter28_tmp_i_i_i_reg_1014 <= ap_reg_pp0_iter27_tmp_i_i_i_reg_1014;
                ap_reg_pp0_iter29_F2_2_reg_1085 <= ap_reg_pp0_iter28_F2_2_reg_1085;
                ap_reg_pp0_iter29_exitcond_i_reg_954 <= ap_reg_pp0_iter28_exitcond_i_reg_954;
                ap_reg_pp0_iter29_icmp_reg_1098 <= ap_reg_pp0_iter28_icmp_reg_1098;
                ap_reg_pp0_iter29_isneg_reg_1031 <= ap_reg_pp0_iter28_isneg_reg_1031;
                ap_reg_pp0_iter29_tmp_23_i_reg_1132 <= tmp_23_i_reg_1132;
                ap_reg_pp0_iter29_tmp_64_reg_1092 <= ap_reg_pp0_iter28_tmp_64_reg_1092;
                ap_reg_pp0_iter29_tmp_73_reg_1127 <= tmp_73_reg_1127;
                ap_reg_pp0_iter29_tmp_8_i_reg_1073 <= ap_reg_pp0_iter28_tmp_8_i_reg_1073;
                ap_reg_pp0_iter29_tmp_i_i_i_99_reg_1020 <= ap_reg_pp0_iter28_tmp_i_i_i_99_reg_1020;
                ap_reg_pp0_iter29_tmp_i_i_i_reg_1014 <= ap_reg_pp0_iter28_tmp_i_i_i_reg_1014;
                ap_reg_pp0_iter2_exitcond_i_reg_954 <= ap_reg_pp0_iter1_exitcond_i_reg_954;
                ap_reg_pp0_iter30_exitcond_i_reg_954 <= ap_reg_pp0_iter29_exitcond_i_reg_954;
                ap_reg_pp0_iter30_tmp_8_i_reg_1073 <= ap_reg_pp0_iter29_tmp_8_i_reg_1073;
                ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020 <= ap_reg_pp0_iter29_tmp_i_i_i_99_reg_1020;
                ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 <= ap_reg_pp0_iter29_tmp_i_i_i_reg_1014;
                ap_reg_pp0_iter3_exitcond_i_reg_954 <= ap_reg_pp0_iter2_exitcond_i_reg_954;
                ap_reg_pp0_iter4_exitcond_i_reg_954 <= ap_reg_pp0_iter3_exitcond_i_reg_954;
                ap_reg_pp0_iter5_exitcond_i_reg_954 <= ap_reg_pp0_iter4_exitcond_i_reg_954;
                ap_reg_pp0_iter6_exitcond_i_reg_954 <= ap_reg_pp0_iter5_exitcond_i_reg_954;
                ap_reg_pp0_iter7_exitcond_i_reg_954 <= ap_reg_pp0_iter6_exitcond_i_reg_954;
                ap_reg_pp0_iter8_exitcond_i_reg_954 <= ap_reg_pp0_iter7_exitcond_i_reg_954;
                ap_reg_pp0_iter9_exitcond_i_reg_954 <= ap_reg_pp0_iter8_exitcond_i_reg_954;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond_i_reg_954 <= exitcond_i_reg_954;
                exitcond_i_reg_954 <= exitcond_i_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_949 <= i_V_fu_235_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter29_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_121_demorgan_i_i_i_reg_1224 <= p_121_demorgan_i_i_i_fu_848_p2;
                p_Val2_14_reg_1212 <= p_Val2_14_fu_714_p3;
                underflow_reg_1218 <= underflow_fu_835_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter24_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_reg_1008 <= grp_fu_205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter10_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t1_reg_993 <= grp_fu_210_p2;
                t2_reg_998 <= grp_fu_215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter6_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_39_i_reg_983 <= grp_fu_220_p1;
                tmp_41_i_reg_988 <= grp_fu_223_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter17_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_42_i_reg_1003 <= grp_fu_201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_74_reg_963 <= src1_data_stream_V_dout;
                tmp_75_reg_968 <= src2_data_stream_V_dout;
            end if;
        end if;
    end process;
    tmp_24_i_reg_1139(53 downto 32) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter31, exitcond1_i_fu_229_p2, ap_CS_fsm_state2, exitcond_i_fu_241_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter30)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_i_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_i_fu_241_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((exitcond_i_fu_241_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        F2_2_cast_i_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(F2_2_reg_1085),32));

    F2_2_fu_375_p3 <= 
        F2_reg_1046 when (tmp_1_i_fu_365_p2(0) = '1') else 
        tmp_2_i_fu_370_p2;
    F2_fu_324_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_6_i_fu_316_p1));
    Range1_all_ones_1_fu_655_p2 <= (tmp_18_i_fu_626_p2 and tmp4_fu_649_p2);
    Range1_all_ones_2_i_fu_804_p2 <= (carry_1_i_i_i_reg_1165 and Range1_all_ones_2_i_s_fu_774_p3);
    Range1_all_ones_2_i_s_fu_774_p3 <= 
        Range1_all_ones_fu_750_p2 when (or_cond117_i_i_i_fu_746_p2(0) = '1') else 
        sel_tmp35_i_fu_769_p3;
    Range1_all_ones_fu_750_p2 <= (Range2_all_ones_1_i_s_fu_739_p3 and Range1_all_ones_1_reg_1184);
    Range1_all_zeros_1_fu_676_p2 <= "1" when (ap_reg_pp0_iter28_p_Val2_s_reg_1064 = ap_const_lv54_0) else "0";
    Range1_all_zeros_2_i_fu_789_p3 <= 
        p_122_i_i_i_fu_760_p2 when (or_cond117_i_i_i_fu_746_p2(0) = '1') else 
        sel_tmp39_i_fu_782_p3;
    Range1_all_zeros_fu_755_p2 <= (ap_const_lv1_1 xor Range1_all_ones_1_reg_1184);
    Range2_V_1_fu_486_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_s_reg_1064),to_integer(unsigned('0' & tmp_24_i_fu_482_p1(31-1 downto 0)))));
    Range2_all_ones_1_i_s_fu_739_p3 <= 
        Range2_all_ones_reg_1191 when (or_cond115_i_i_i_fu_734_p2(0) = '1') else 
        rev4_fu_729_p2;
    Range2_all_ones_fu_666_p2 <= "1" when (Range2_V_1_reg_1144 = r_V_fu_661_p2) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state35 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_954, ap_enable_reg_pp0_iter31, ap_reg_pp0_iter30_exitcond_i_reg_954)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter30_exitcond_i_reg_954 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_954 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_954 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_954, ap_enable_reg_pp0_iter31, ap_reg_pp0_iter30_exitcond_i_reg_954)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter30_exitcond_i_reg_954 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_954 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_954 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_954, ap_enable_reg_pp0_iter31, ap_reg_pp0_iter30_exitcond_i_reg_954)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter30_exitcond_i_reg_954 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_954 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_954 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_pp0_stage0_iter31_assign_proc : process(dst_data_stream_V_full_n, ap_reg_pp0_iter30_exitcond_i_reg_954)
    begin
                ap_block_state34_pp0_stage0_iter31 <= ((ap_reg_pp0_iter30_exitcond_i_reg_954 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(src1_data_stream_V_empty_n, src2_data_stream_V_empty_n, exitcond_i_reg_954)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_i_reg_954 = ap_const_lv1_0) and (src2_data_stream_V_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_954 = ap_const_lv1_0) and (src1_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_fu_241_p2)
    begin
        if ((exitcond_i_fu_241_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_fu_229_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond1_i_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30)
    begin
        if (((ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond1_i_fu_229_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond1_i_fu_229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_i_fu_873_p2 <= (underflow_not_i_fu_858_p2 or p_121_demorgan_i_i_no_fu_868_p2);
    brmerge_i_i_i_not_i_fu_863_p2 <= (underflow_not_i_fu_858_p2 and p_121_demorgan_i_i_i_reg_1224);
    carry_1_i_i_i_fu_617_p2 <= (tmp3_fu_611_p2 and sel_tmp3_i_fu_564_p2);
    deleted_zeros_fu_797_p3 <= 
        Range1_all_ones_2_i_s_fu_774_p3 when (carry_1_i_i_i_reg_1165(0) = '1') else 
        Range1_all_zeros_2_i_fu_789_p3;

    dst_data_stream_V_blk_n_assign_proc : process(dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter31, ap_reg_pp0_iter30_exitcond_i_reg_954)
    begin
        if (((ap_reg_pp0_iter30_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1))) then 
            dst_data_stream_V_blk_n <= dst_data_stream_V_full_n;
        else 
            dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_V_din <= 
        p_Val2_12_0_i_i_mux_fu_879_p3 when (sel_tmp56_i_fu_930_p2(0) = '1') else 
        sel_tmp52_i_fu_912_p3;

    dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter31, ap_reg_pp0_iter30_exitcond_i_reg_954, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter30_exitcond_i_reg_954 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_fu_229_p2 <= "1" when (t_V_reg_179 = ap_const_lv11_438) else "0";
    exitcond_i_fu_241_p2 <= "1" when (t_V_5_reg_190 = ap_const_lv11_780) else "0";
    exp_tmp_V_fu_306_p4 <= ireg_V_fu_290_p1(62 downto 52);

    grp_fu_201_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_201_ce <= ap_const_logic_1;
        else 
            grp_fu_201_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_205_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_205_ce <= ap_const_logic_1;
        else 
            grp_fu_205_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_210_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_210_ce <= ap_const_logic_1;
        else 
            grp_fu_210_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_215_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_215_ce <= ap_const_logic_1;
        else 
            grp_fu_215_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_220_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_220_ce <= ap_const_logic_1;
        else 
            grp_fu_220_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_220_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_reg_963),32));

    grp_fu_223_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_223_ce <= ap_const_logic_1;
        else 
            grp_fu_223_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_223_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_reg_968),32));
    i_V_fu_235_p2 <= std_logic_vector(unsigned(t_V_reg_179) + unsigned(ap_const_lv11_1));
    icmp_fu_396_p2 <= "1" when (tmp_65_fu_386_p4 = ap_const_lv9_0) else "0";
    ireg_V_fu_290_p1 <= d_assign_fu_226_p1;
    j_V_fu_247_p2 <= std_logic_vector(unsigned(t_V_5_reg_190) + unsigned(ap_const_lv11_1));
    lD_fu_645_p1 <= tmp_21_i_fu_640_p2(1 - 1 downto 0);
    loc_V_1_fu_274_p1 <= p_Val2_10_fu_261_p1(23 - 1 downto 0);
    loc_V_fu_264_p4 <= p_Val2_10_fu_261_p1(30 downto 23);
    man_V_1_fu_347_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_343_p1));
    newsignbit_fu_721_p3 <= p_Val2_14_fu_714_p3(7 downto 7);
    not_sel_tmp28_i_fu_605_p2 <= (tmp_9_not_i_fu_600_p2 or sel_tmp12_demorgan_i_fu_596_p2);
    or_cond115_i_i_i_fu_734_p2 <= (rev4_fu_729_p2 and ap_reg_pp0_iter29_tmp_23_i_reg_1132);
    or_cond117_i_i_i_fu_746_p2 <= (rev_reg_1177 and ap_reg_pp0_iter29_tmp_23_i_reg_1132);
    p_119_i_i_i_fu_765_p2 <= (rev_reg_1177 or Range1_all_zeros_1_reg_1201);
    p_121_demorgan_i_i_i_fu_848_p2 <= (tmp6_fu_843_p2 or deleted_zeros_fu_797_p3);
    p_121_demorgan_i_i_no_fu_868_p2 <= (p_121_demorgan_i_i_i_reg_1224 xor ap_const_lv1_1);
    p_122_i_i_i_fu_760_p2 <= (tmp_25_i_reg_1196 and Range1_all_zeros_fu_755_p2);
    p_Result_s_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i1_fu_336_p3),54));
    p_Val2_0_i_i_i6_i_fu_423_p3 <= 
        ap_const_lv8_FF when (ap_reg_pp0_iter27_isneg_reg_1031(0) = '1') else 
        ap_const_lv8_0;
    p_Val2_10_fu_261_p1 <= sum_reg_1008;
    p_Val2_12_0_i_i_mux_fu_879_p3 <= 
        p_Val2_14_reg_1212 when (brmerge_i_i_i_not_i_fu_863_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_Val2_12_fu_430_p3 <= 
        tmp_66_fu_419_p1 when (tmp_5_i_fu_405_p2(0) = '1') else 
        p_Val2_0_i_i_i6_i_fu_423_p3;
    p_Val2_13_fu_529_p2 <= std_logic_vector(unsigned(tmp_16_i_fu_525_p1) + unsigned(p_Val2_12_reg_1104));
    p_Val2_14_fu_714_p3 <= 
        tmp_13_i_fu_699_p2 when (sel_tmp13_i_fu_709_p2(0) = '1') else 
        sel_tmp9_i_reg_1155;
    p_Val2_s_fu_353_p3 <= 
        man_V_1_fu_347_p2 when (isneg_reg_1031(0) = '1') else 
        p_Result_s_fu_343_p1;
        pos1_cast_i_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_reg_1115),32));

    pos1_fu_446_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) + unsigned(ap_reg_pp0_iter27_F2_reg_1046));
        pos2_cast_i_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_451_p2),32));

    pos2_fu_451_p2 <= std_logic_vector(unsigned(ap_const_lv12_9) + unsigned(ap_reg_pp0_iter27_F2_reg_1046));
    qb_fu_518_p3 <= 
        ap_reg_pp0_iter28_isneg_reg_1031 when (tmp_14_i_fu_497_p2(0) = '1') else 
        tmp_67_fu_511_p3;
    r_V_fu_661_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_24_i_reg_1139(31-1 downto 0)))));
    rev4_fu_729_p2 <= (ap_reg_pp0_iter29_tmp_73_reg_1127 xor ap_const_lv1_1);
    rev_fu_631_p2 <= (tmp_71_reg_1121 xor ap_const_lv1_1);
    sel_tmp12_demorgan_i_fu_596_p2 <= (ap_reg_pp0_iter28_tmp_3_i_reg_1057 or ap_reg_pp0_iter28_tmp_1_i_reg_1079);
    sel_tmp12_i_fu_704_p2 <= (sel_tmp12_demorgan_i_reg_1160 xor ap_const_lv1_1);
    sel_tmp13_i_fu_709_p2 <= (sel_tmp12_i_fu_704_p2 and ap_reg_pp0_iter29_icmp_reg_1098);
    sel_tmp1_i_fu_554_p2 <= (ap_reg_pp0_iter28_tmp_3_i_reg_1057 xor ap_const_lv1_1);
    sel_tmp2_i_fu_559_p2 <= (sel_tmp1_i_fu_554_p2 and ap_reg_pp0_iter28_tmp_1_i_reg_1079);
    sel_tmp33_i_fu_686_p2 <= (tmp_71_reg_1121 or tmp_23_i_not_fu_681_p2);
    sel_tmp34_i_fu_691_p2 <= (tmp_27_i_reg_1150 and sel_tmp33_i_fu_686_p2);
    sel_tmp35_i_fu_769_p3 <= 
        Range1_all_ones_1_reg_1184 when (sel_tmp34_i_reg_1206(0) = '1') else 
        rev_reg_1177;
    sel_tmp39_i_fu_782_p3 <= 
        Range1_all_zeros_fu_755_p2 when (sel_tmp34_i_reg_1206(0) = '1') else 
        p_119_i_i_i_fu_765_p2;
    sel_tmp3_i_fu_564_p2 <= (tmp_68_reg_1109 and sel_tmp2_i_fu_559_p2);
    sel_tmp41_i_fu_815_p2 <= (tmp_18_i_reg_1171 xor ap_const_lv1_1);
    sel_tmp46_i_fu_826_p2 <= (tmp5_fu_820_p2 and ap_reg_pp0_iter29_isneg_reg_1031);
    sel_tmp47_i_fu_831_p2 <= (tmp_18_i_reg_1171 and ap_reg_pp0_iter29_isneg_reg_1031);
    sel_tmp4_i_fu_569_p3 <= 
        p_Val2_13_fu_529_p2 when (sel_tmp3_i_fu_564_p2(0) = '1') else 
        sel_tmp_i_fu_548_p3;
    sel_tmp50_i_demorgan_fu_886_p2 <= (ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 and ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020);
    sel_tmp50_i_fu_890_p2 <= (sel_tmp50_i_demorgan_fu_886_p2 xor ap_const_lv1_1);
    sel_tmp51_i_fu_896_p2 <= (sel_tmp50_i_fu_890_p2 and ap_reg_pp0_iter30_tmp_8_i_reg_1073);
    sel_tmp52_i_fu_912_p3 <= 
        ap_const_lv8_0 when (tmp_31_fu_907_p2(0) = '1') else 
        p_Val2_14_reg_1212;
    sel_tmp55_demorgan_i_fu_919_p2 <= (tmp_demorgan_i_fu_854_p2 or ap_reg_pp0_iter30_tmp_8_i_reg_1073);
    sel_tmp55_i_fu_924_p2 <= (sel_tmp55_demorgan_i_fu_919_p2 xor ap_const_lv1_1);
    sel_tmp56_i_fu_930_p2 <= (sel_tmp55_i_fu_924_p2 and brmerge_i_fu_873_p2);
    sel_tmp7_i_fu_577_p2 <= (tmp_68_reg_1109 xor ap_const_lv1_1);
    sel_tmp8_i_fu_582_p2 <= (sel_tmp7_i_fu_577_p2 and sel_tmp2_i_fu_559_p2);
    sel_tmp9_i_fu_588_p3 <= 
        p_Val2_13_fu_529_p2 when (sel_tmp8_i_fu_582_p2(0) = '1') else 
        sel_tmp4_i_fu_569_p3;
    sel_tmp_i_fu_548_p3 <= 
        ap_reg_pp0_iter28_tmp_64_reg_1092 when (ap_reg_pp0_iter28_tmp_3_i_reg_1057(0) = '1') else 
        ap_const_lv8_0;

    src1_data_stream_V_blk_n_assign_proc : process(src1_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_954)
    begin
        if (((exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src1_data_stream_V_blk_n <= src1_data_stream_V_empty_n;
        else 
            src1_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src1_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_954, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_954 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src1_data_stream_V_read <= ap_const_logic_1;
        else 
            src1_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src2_data_stream_V_blk_n_assign_proc : process(src2_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_954)
    begin
        if (((exitcond_i_reg_954 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src2_data_stream_V_blk_n <= src2_data_stream_V_empty_n;
        else 
            src2_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src2_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_954, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_954 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src2_data_stream_V_read <= ap_const_logic_1;
        else 
            src2_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp3_fu_611_p2 <= (tmp_17_i_fu_542_p2 and not_sel_tmp28_i_fu_605_p2);
    tmp4_fu_649_p2 <= (rev_fu_631_p2 and lD_fu_645_p1);
    tmp5_fu_820_p2 <= (sel_tmp41_i_fu_815_p2 and newsignbit_fu_721_p3);
    tmp6_fu_843_p2 <= (sel_tmp41_i_fu_815_p2 or ap_reg_pp0_iter29_isneg_reg_1031);
    tmp_10_i_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(F2_2_cast_i_fu_402_p1),54));
    tmp_11_i_fu_414_p2 <= std_logic_vector(shift_right(signed(p_Val2_s_reg_1064),to_integer(unsigned('0' & tmp_10_i_fu_410_p1(31-1 downto 0)))));
    tmp_13_i_fu_699_p2 <= std_logic_vector(shift_left(unsigned(ap_reg_pp0_iter29_tmp_64_reg_1092),to_integer(unsigned('0' & tmp_63_fu_696_p1(8-1 downto 0)))));
    tmp_14_i_fu_497_p2 <= "1" when (signed(ap_reg_pp0_iter28_F2_reg_1046) > signed(ap_const_lv12_36)) else "0";
    tmp_15_i_fu_502_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(ap_reg_pp0_iter28_F2_reg_1046));
    tmp_16_i_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_fu_518_p3),8));
    tmp_17_i_fu_542_p2 <= (tmp_69_fu_534_p3 xor ap_const_lv1_1);
    tmp_18_i_fu_626_p2 <= "1" when (signed(pos1_reg_1115) < signed(ap_const_lv12_36)) else "0";
    tmp_19_cast_i_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_i_fu_502_p2),32));
    tmp_1_i_fu_365_p2 <= "1" when (signed(F2_reg_1046) > signed(ap_const_lv12_0)) else "0";
    tmp_20_i_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos1_cast_i_fu_623_p1),54));
    tmp_21_i_fu_640_p2 <= std_logic_vector(shift_right(signed(ap_reg_pp0_iter28_p_Val2_s_reg_1064),to_integer(unsigned('0' & tmp_20_i_fu_636_p1(31-1 downto 0)))));
    tmp_23_i_fu_476_p2 <= "1" when (signed(pos2_fu_451_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_23_i_not_fu_681_p2 <= (tmp_23_i_reg_1132 xor ap_const_lv1_1);
    tmp_24_i_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos2_cast_i_fu_456_p1),54));
    tmp_25_i_fu_671_p2 <= "1" when (Range2_V_1_reg_1144 = ap_const_lv54_0) else "0";
    tmp_27_i_fu_491_p2 <= "1" when (pos2_fu_451_p2 = ap_const_lv12_36) else "0";
    tmp_28_i2_fu_809_p2 <= (ap_const_lv1_1 xor Range1_all_ones_2_i_fu_804_p2);
    tmp_2_i_fu_370_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(F2_reg_1046));
    tmp_31_fu_907_p2 <= (underflow_reg_1218 or tmp_s_fu_901_p2);
    tmp_3_i_fu_330_p2 <= "1" when (exp_tmp_V_fu_306_p4 = ap_const_lv11_433) else "0";
    tmp_5_i_fu_405_p2 <= "1" when (unsigned(F2_2_reg_1085) < unsigned(ap_const_lv12_36)) else "0";
    tmp_62_fu_320_p1 <= ireg_V_fu_290_p1(52 - 1 downto 0);
    tmp_63_fu_696_p1 <= ap_reg_pp0_iter29_F2_2_reg_1085(8 - 1 downto 0);
    tmp_64_fu_382_p1 <= p_Val2_s_fu_353_p3(8 - 1 downto 0);
    tmp_65_fu_386_p4 <= F2_2_fu_375_p3(11 downto 3);
    tmp_66_fu_419_p1 <= tmp_11_i_fu_414_p2(8 - 1 downto 0);
    tmp_67_fu_511_p3 <= ap_reg_pp0_iter28_p_Val2_s_reg_1064(to_integer(unsigned(tmp_19_cast_i_fu_507_p1)) downto to_integer(unsigned(tmp_19_cast_i_fu_507_p1))) when (to_integer(unsigned(tmp_19_cast_i_fu_507_p1))>= 0 and to_integer(unsigned(tmp_19_cast_i_fu_507_p1))<=53) else "-";
    tmp_69_fu_534_p3 <= p_Val2_13_fu_529_p2(7 downto 7);
    tmp_6_i_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_306_p4),12));
    tmp_8_i_fu_360_p2 <= "1" when (tmp_reg_1026 = ap_const_lv63_0) else "0";
    tmp_9_not_i_fu_600_p2 <= (ap_reg_pp0_iter28_icmp_reg_1098 xor ap_const_lv1_1);
    tmp_demorgan_i_fu_854_p2 <= (ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 and ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020);
    tmp_fu_294_p1 <= ireg_V_fu_290_p1(63 - 1 downto 0);
    tmp_i1_fu_336_p3 <= (ap_const_lv1_1 & tmp_62_reg_1041);
    tmp_i_i_i_99_fu_284_p2 <= "0" when (loc_V_1_fu_274_p1 = ap_const_lv23_0) else "1";
    tmp_i_i_i_fu_278_p2 <= "1" when (loc_V_fu_264_p4 = ap_const_lv8_FF) else "0";
    tmp_s_fu_901_p2 <= (tmp_demorgan_i_fu_854_p2 or sel_tmp51_i_fu_896_p2);
    underflow_fu_835_p3 <= 
        tmp_28_i2_fu_809_p2 when (sel_tmp47_i_fu_831_p2(0) = '1') else 
        sel_tmp46_i_fu_826_p2;
    underflow_not_i_fu_858_p2 <= (underflow_reg_1218 xor ap_const_lv1_1);
end behav;
