// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_0_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_cols_V_dout,
        img_cols_V_empty_n,
        img_cols_V_read,
        cacheBuff1_i_dout,
        cacheBuff1_i_empty_n,
        cacheBuff1_i_read,
        img_data_stream_0_V_din,
        img_data_stream_0_V_full_n,
        img_data_stream_0_V_write,
        img_data_stream_1_V_din,
        img_data_stream_1_V_full_n,
        img_data_stream_1_V_write,
        img_data_stream_2_V_din,
        img_data_stream_2_V_full_n,
        img_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] img_cols_V_dout;
input   img_cols_V_empty_n;
output   img_cols_V_read;
input  [31:0] cacheBuff1_i_dout;
input   cacheBuff1_i_empty_n;
output   cacheBuff1_i_read;
output  [7:0] img_data_stream_0_V_din;
input   img_data_stream_0_V_full_n;
output   img_data_stream_0_V_write;
output  [7:0] img_data_stream_1_V_din;
input   img_data_stream_1_V_full_n;
output   img_data_stream_1_V_write;
output  [7:0] img_data_stream_2_V_din;
input   img_data_stream_2_V_full_n;
output   img_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_cols_V_read;
reg cacheBuff1_i_read;
reg[7:0] img_data_stream_0_V_din;
reg img_data_stream_0_V_write;
reg[7:0] img_data_stream_1_V_din;
reg img_data_stream_1_V_write;
reg[7:0] img_data_stream_2_V_din;
reg img_data_stream_2_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_cols_V_blk_n;
reg    cacheBuff1_i_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_20_fu_297_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    img_data_stream_0_V_blk_n;
wire    ap_CS_fsm_state6;
reg    img_data_stream_1_V_blk_n;
reg    img_data_stream_2_V_blk_n;
reg   [7:0] reg_209;
reg    ap_block_state3;
reg    ap_block_state4;
reg    ap_block_state5;
reg   [7:0] reg_216;
reg   [31:0] img_cols_V_read_reg_323;
reg    ap_block_state1;
wire   [31:0] tmp_19_fu_289_p3;
reg   [31:0] tmp_19_reg_330;
wire    ap_CS_fsm_state2;
wire   [31:0] col_fu_307_p2;
reg   [31:0] col_reg_338;
reg   [7:0] tmp_25_reg_343;
reg   [31:0] col_i_i_reg_165;
reg    ap_block_state6;
wire   [7:0] tmp_21_fu_302_p1;
wire   [7:0] tmp_22_fu_313_p1;
wire   [7:0] tmp_23_fu_318_p1;
wire   [31:0] img_cols_V_load_op_o_fu_229_p2;
wire   [31:0] p_neg_fu_242_p2;
wire   [29:0] p_lshr_fu_247_p4;
wire   [0:0] tmp_11_fu_234_p3;
wire   [29:0] p_neg_t_fu_257_p2;
wire   [29:0] tmp_16_fu_263_p4;
wire   [0:0] tmp_fu_222_p3;
wire   [29:0] tmp_17_fu_273_p3;
wire   [29:0] tmp_18_fu_281_p3;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        col_i_i_reg_165 <= col_reg_338;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        col_i_i_reg_165 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        col_reg_338 <= col_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((img_cols_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_cols_V_read_reg_323 <= img_cols_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_209 <= {{cacheBuff1_i_dout[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_216 <= {{cacheBuff1_i_dout[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_19_reg_330[31 : 2] <= tmp_19_fu_289_p3[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_25_reg_343 <= {{cacheBuff1_i_dout[15:8]}};
    end
end

always @ (*) begin
    if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        cacheBuff1_i_blk_n = cacheBuff1_i_empty_n;
    end else begin
        cacheBuff1_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        cacheBuff1_i_read = 1'b1;
    end else begin
        cacheBuff1_i_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_cols_V_blk_n = img_cols_V_empty_n;
    end else begin
        img_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_cols_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_cols_V_read = 1'b1;
    end else begin
        img_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        img_data_stream_0_V_blk_n = img_data_stream_0_V_full_n;
    end else begin
        img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        img_data_stream_0_V_din = tmp_25_reg_343;
    end else if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        img_data_stream_0_V_din = reg_216;
    end else if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        img_data_stream_0_V_din = reg_209;
    end else if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        img_data_stream_0_V_din = tmp_21_fu_302_p1;
    end else begin
        img_data_stream_0_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        img_data_stream_0_V_write = 1'b1;
    end else begin
        img_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        img_data_stream_1_V_blk_n = img_data_stream_1_V_full_n;
    end else begin
        img_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        img_data_stream_1_V_din = reg_216;
    end else if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        img_data_stream_1_V_din = reg_209;
    end else if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        img_data_stream_1_V_din = tmp_22_fu_313_p1;
    end else if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        img_data_stream_1_V_din = {{cacheBuff1_i_dout[15:8]}};
    end else begin
        img_data_stream_1_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        img_data_stream_1_V_write = 1'b1;
    end else begin
        img_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        img_data_stream_2_V_blk_n = img_data_stream_2_V_full_n;
    end else begin
        img_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        img_data_stream_2_V_din = reg_209;
    end else if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        img_data_stream_2_V_din = tmp_23_fu_318_p1;
    end else if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        img_data_stream_2_V_din = {{cacheBuff1_i_dout[15:8]}};
    end else if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        img_data_stream_2_V_din = {{cacheBuff1_i_dout[23:16]}};
    end else begin
        img_data_stream_2_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        img_data_stream_2_V_write = 1'b1;
    end else begin
        img_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((img_cols_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0))) & (tmp_20_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((img_cols_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = (((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_2_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_1_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (img_data_stream_0_V_full_n == 1'b0)) | ((tmp_20_fu_297_p2 == 1'd0) & (cacheBuff1_i_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = ((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0) | (cacheBuff1_i_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((img_data_stream_2_V_full_n == 1'b0) | (img_data_stream_1_V_full_n == 1'b0) | (img_data_stream_0_V_full_n == 1'b0));
end

assign col_fu_307_p2 = (32'd4 + col_i_i_reg_165);

assign img_cols_V_load_op_o_fu_229_p2 = (img_cols_V_read_reg_323 + 32'd3);

assign p_lshr_fu_247_p4 = {{p_neg_fu_242_p2[31:2]}};

assign p_neg_fu_242_p2 = ($signed(32'd4294967293) - $signed(img_cols_V_read_reg_323));

assign p_neg_t_fu_257_p2 = (30'd0 - p_lshr_fu_247_p4);

assign tmp_11_fu_234_p3 = img_cols_V_load_op_o_fu_229_p2[32'd31];

assign tmp_16_fu_263_p4 = {{img_cols_V_load_op_o_fu_229_p2[31:2]}};

assign tmp_17_fu_273_p3 = ((tmp_11_fu_234_p3[0:0] === 1'b1) ? p_neg_t_fu_257_p2 : tmp_16_fu_263_p4);

assign tmp_18_fu_281_p3 = ((tmp_fu_222_p3[0:0] === 1'b1) ? 30'd0 : tmp_17_fu_273_p3);

assign tmp_19_fu_289_p3 = {{tmp_18_fu_281_p3}, {2'd0}};

assign tmp_20_fu_297_p2 = ((col_i_i_reg_165 == tmp_19_reg_330) ? 1'b1 : 1'b0);

assign tmp_21_fu_302_p1 = cacheBuff1_i_dout[7:0];

assign tmp_22_fu_313_p1 = cacheBuff1_i_dout[7:0];

assign tmp_23_fu_318_p1 = cacheBuff1_i_dout[7:0];

assign tmp_fu_222_p3 = img_cols_V_read_reg_323[32'd31];

always @ (posedge ap_clk) begin
    tmp_19_reg_330[1:0] <= 2'b00;
end

endmodule //Loop_0_proc
