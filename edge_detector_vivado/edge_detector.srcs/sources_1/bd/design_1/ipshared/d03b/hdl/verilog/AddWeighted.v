// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AddWeighted (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src1_data_stream_V_dout,
        src1_data_stream_V_empty_n,
        src1_data_stream_V_read,
        src2_data_stream_V_dout,
        src2_data_stream_V_empty_n,
        src2_data_stream_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state35 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src1_data_stream_V_dout;
input   src1_data_stream_V_empty_n;
output   src1_data_stream_V_read;
input  [7:0] src2_data_stream_V_dout;
input   src2_data_stream_V_empty_n;
output   src2_data_stream_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src1_data_stream_V_read;
reg src2_data_stream_V_read;
reg dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src1_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_reg_954;
reg    src2_data_stream_V_blk_n;
reg    dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter31;
reg   [0:0] ap_reg_pp0_iter30_exitcond_i_reg_954;
reg   [10:0] t_V_5_reg_190;
wire   [0:0] exitcond1_i_fu_229_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_235_p2;
reg   [10:0] i_V_reg_949;
wire   [0:0] exitcond_i_fu_241_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
reg    ap_block_state34_pp0_stage0_iter31;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter2_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter3_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter4_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter5_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter6_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter7_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter8_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter9_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter10_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter11_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter12_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter13_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter14_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter15_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter16_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter17_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter18_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter19_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter20_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter21_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter22_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter23_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter24_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter25_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter26_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter27_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter28_exitcond_i_reg_954;
reg   [0:0] ap_reg_pp0_iter29_exitcond_i_reg_954;
wire   [10:0] j_V_fu_247_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_74_reg_963;
reg   [7:0] tmp_75_reg_968;
wire   [31:0] grp_fu_220_p1;
reg   [31:0] tmp_39_i_reg_983;
wire   [31:0] grp_fu_223_p1;
reg   [31:0] tmp_41_i_reg_988;
wire   [31:0] grp_fu_210_p2;
reg   [31:0] t1_reg_993;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] t2_reg_998;
wire   [31:0] grp_fu_201_p2;
reg   [31:0] tmp_42_i_reg_1003;
wire   [31:0] grp_fu_205_p2;
reg   [31:0] sum_reg_1008;
wire   [0:0] tmp_i_i_i_fu_278_p2;
reg   [0:0] tmp_i_i_i_reg_1014;
reg   [0:0] ap_reg_pp0_iter27_tmp_i_i_i_reg_1014;
reg   [0:0] ap_reg_pp0_iter28_tmp_i_i_i_reg_1014;
reg   [0:0] ap_reg_pp0_iter29_tmp_i_i_i_reg_1014;
reg   [0:0] ap_reg_pp0_iter30_tmp_i_i_i_reg_1014;
wire   [0:0] tmp_i_i_i_99_fu_284_p2;
reg   [0:0] tmp_i_i_i_99_reg_1020;
reg   [0:0] ap_reg_pp0_iter27_tmp_i_i_i_99_reg_1020;
reg   [0:0] ap_reg_pp0_iter28_tmp_i_i_i_99_reg_1020;
reg   [0:0] ap_reg_pp0_iter29_tmp_i_i_i_99_reg_1020;
reg   [0:0] ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020;
wire   [62:0] tmp_fu_294_p1;
reg   [62:0] tmp_reg_1026;
reg   [0:0] isneg_reg_1031;
reg   [0:0] ap_reg_pp0_iter27_isneg_reg_1031;
reg   [0:0] ap_reg_pp0_iter28_isneg_reg_1031;
reg   [0:0] ap_reg_pp0_iter29_isneg_reg_1031;
wire   [51:0] tmp_62_fu_320_p1;
reg   [51:0] tmp_62_reg_1041;
wire   [11:0] F2_fu_324_p2;
reg   [11:0] F2_reg_1046;
reg   [11:0] ap_reg_pp0_iter27_F2_reg_1046;
reg   [11:0] ap_reg_pp0_iter28_F2_reg_1046;
wire   [0:0] tmp_3_i_fu_330_p2;
reg   [0:0] tmp_3_i_reg_1057;
reg   [0:0] ap_reg_pp0_iter27_tmp_3_i_reg_1057;
reg   [0:0] ap_reg_pp0_iter28_tmp_3_i_reg_1057;
wire   [53:0] p_Val2_s_fu_353_p3;
reg   [53:0] p_Val2_s_reg_1064;
reg   [53:0] ap_reg_pp0_iter28_p_Val2_s_reg_1064;
wire   [0:0] tmp_8_i_fu_360_p2;
reg   [0:0] tmp_8_i_reg_1073;
reg   [0:0] ap_reg_pp0_iter28_tmp_8_i_reg_1073;
reg   [0:0] ap_reg_pp0_iter29_tmp_8_i_reg_1073;
reg   [0:0] ap_reg_pp0_iter30_tmp_8_i_reg_1073;
wire   [0:0] tmp_1_i_fu_365_p2;
reg   [0:0] tmp_1_i_reg_1079;
reg   [0:0] ap_reg_pp0_iter28_tmp_1_i_reg_1079;
wire   [11:0] F2_2_fu_375_p3;
reg   [11:0] F2_2_reg_1085;
reg   [11:0] ap_reg_pp0_iter28_F2_2_reg_1085;
reg   [11:0] ap_reg_pp0_iter29_F2_2_reg_1085;
wire   [7:0] tmp_64_fu_382_p1;
reg   [7:0] tmp_64_reg_1092;
reg   [7:0] ap_reg_pp0_iter28_tmp_64_reg_1092;
reg   [7:0] ap_reg_pp0_iter29_tmp_64_reg_1092;
wire   [0:0] icmp_fu_396_p2;
reg   [0:0] icmp_reg_1098;
reg   [0:0] ap_reg_pp0_iter28_icmp_reg_1098;
reg   [0:0] ap_reg_pp0_iter29_icmp_reg_1098;
wire   [7:0] p_Val2_12_fu_430_p3;
reg   [7:0] p_Val2_12_reg_1104;
reg   [0:0] tmp_68_reg_1109;
wire   [11:0] pos1_fu_446_p2;
reg   [11:0] pos1_reg_1115;
reg   [0:0] tmp_71_reg_1121;
reg   [0:0] tmp_73_reg_1127;
reg   [0:0] ap_reg_pp0_iter29_tmp_73_reg_1127;
wire   [0:0] tmp_23_i_fu_476_p2;
reg   [0:0] tmp_23_i_reg_1132;
reg   [0:0] ap_reg_pp0_iter29_tmp_23_i_reg_1132;
wire   [53:0] tmp_24_i_fu_482_p1;
reg   [53:0] tmp_24_i_reg_1139;
wire   [53:0] Range2_V_1_fu_486_p2;
reg   [53:0] Range2_V_1_reg_1144;
wire   [0:0] tmp_27_i_fu_491_p2;
reg   [0:0] tmp_27_i_reg_1150;
wire   [7:0] sel_tmp9_i_fu_588_p3;
reg   [7:0] sel_tmp9_i_reg_1155;
wire   [0:0] sel_tmp12_demorgan_i_fu_596_p2;
reg   [0:0] sel_tmp12_demorgan_i_reg_1160;
wire   [0:0] carry_1_i_i_i_fu_617_p2;
reg   [0:0] carry_1_i_i_i_reg_1165;
wire   [0:0] tmp_18_i_fu_626_p2;
reg   [0:0] tmp_18_i_reg_1171;
wire   [0:0] rev_fu_631_p2;
reg   [0:0] rev_reg_1177;
wire   [0:0] Range1_all_ones_1_fu_655_p2;
reg   [0:0] Range1_all_ones_1_reg_1184;
wire   [0:0] Range2_all_ones_fu_666_p2;
reg   [0:0] Range2_all_ones_reg_1191;
wire   [0:0] tmp_25_i_fu_671_p2;
reg   [0:0] tmp_25_i_reg_1196;
wire   [0:0] Range1_all_zeros_1_fu_676_p2;
reg   [0:0] Range1_all_zeros_1_reg_1201;
wire   [0:0] sel_tmp34_i_fu_691_p2;
reg   [0:0] sel_tmp34_i_reg_1206;
wire   [7:0] p_Val2_14_fu_714_p3;
reg   [7:0] p_Val2_14_reg_1212;
wire   [0:0] underflow_fu_835_p3;
reg   [0:0] underflow_reg_1218;
wire   [0:0] p_121_demorgan_i_i_i_fu_848_p2;
reg   [0:0] p_121_demorgan_i_i_i_reg_1224;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg   [10:0] t_V_reg_179;
reg    ap_block_state1;
wire    ap_CS_fsm_state35;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_220_p0;
wire   [31:0] grp_fu_223_p0;
wire   [31:0] p_Val2_10_fu_261_p1;
wire   [7:0] loc_V_fu_264_p4;
wire   [22:0] loc_V_1_fu_274_p1;
wire   [63:0] d_assign_fu_226_p1;
wire   [63:0] ireg_V_fu_290_p1;
wire   [10:0] exp_tmp_V_fu_306_p4;
wire   [11:0] tmp_6_i_fu_316_p1;
wire   [52:0] tmp_i1_fu_336_p3;
wire   [53:0] p_Result_s_fu_343_p1;
wire   [53:0] man_V_1_fu_347_p2;
wire   [11:0] tmp_2_i_fu_370_p2;
wire   [8:0] tmp_65_fu_386_p4;
wire  signed [31:0] F2_2_cast_i_fu_402_p1;
wire   [53:0] tmp_10_i_fu_410_p1;
wire   [53:0] tmp_11_i_fu_414_p2;
wire   [0:0] tmp_5_i_fu_405_p2;
wire   [7:0] tmp_66_fu_419_p1;
wire   [7:0] p_Val2_0_i_i_i6_i_fu_423_p3;
wire   [11:0] pos2_fu_451_p2;
wire  signed [31:0] pos2_cast_i_fu_456_p1;
wire   [11:0] tmp_15_i_fu_502_p2;
wire   [31:0] tmp_19_cast_i_fu_507_p1;
wire   [0:0] tmp_14_i_fu_497_p2;
wire   [0:0] tmp_67_fu_511_p3;
wire   [0:0] qb_fu_518_p3;
wire   [7:0] tmp_16_i_fu_525_p1;
wire   [7:0] p_Val2_13_fu_529_p2;
wire   [0:0] tmp_69_fu_534_p3;
wire   [0:0] sel_tmp1_i_fu_554_p2;
wire   [0:0] sel_tmp2_i_fu_559_p2;
wire   [0:0] sel_tmp3_i_fu_564_p2;
wire   [7:0] sel_tmp_i_fu_548_p3;
wire   [0:0] sel_tmp7_i_fu_577_p2;
wire   [0:0] sel_tmp8_i_fu_582_p2;
wire   [7:0] sel_tmp4_i_fu_569_p3;
wire   [0:0] tmp_9_not_i_fu_600_p2;
wire   [0:0] not_sel_tmp28_i_fu_605_p2;
wire   [0:0] tmp_17_i_fu_542_p2;
wire   [0:0] tmp3_fu_611_p2;
wire  signed [31:0] pos1_cast_i_fu_623_p1;
wire   [53:0] tmp_20_i_fu_636_p1;
wire   [53:0] tmp_21_i_fu_640_p2;
wire   [0:0] lD_fu_645_p1;
wire   [0:0] tmp4_fu_649_p2;
wire   [53:0] r_V_fu_661_p2;
wire   [0:0] tmp_23_i_not_fu_681_p2;
wire   [0:0] sel_tmp33_i_fu_686_p2;
wire   [7:0] tmp_63_fu_696_p1;
wire   [0:0] sel_tmp12_i_fu_704_p2;
wire   [0:0] sel_tmp13_i_fu_709_p2;
wire   [7:0] tmp_13_i_fu_699_p2;
wire   [0:0] rev4_fu_729_p2;
wire   [0:0] or_cond115_i_i_i_fu_734_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_739_p3;
wire   [0:0] Range1_all_zeros_fu_755_p2;
wire   [0:0] or_cond117_i_i_i_fu_746_p2;
wire   [0:0] Range1_all_ones_fu_750_p2;
wire   [0:0] sel_tmp35_i_fu_769_p3;
wire   [0:0] p_119_i_i_i_fu_765_p2;
wire   [0:0] p_122_i_i_i_fu_760_p2;
wire   [0:0] sel_tmp39_i_fu_782_p3;
wire   [0:0] Range1_all_ones_2_i_s_fu_774_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_789_p3;
wire   [0:0] Range1_all_ones_2_i_fu_804_p2;
wire   [0:0] newsignbit_fu_721_p3;
wire   [0:0] sel_tmp41_i_fu_815_p2;
wire   [0:0] tmp5_fu_820_p2;
wire   [0:0] sel_tmp47_i_fu_831_p2;
wire   [0:0] tmp_28_i2_fu_809_p2;
wire   [0:0] sel_tmp46_i_fu_826_p2;
wire   [0:0] tmp6_fu_843_p2;
wire   [0:0] deleted_zeros_fu_797_p3;
wire   [0:0] underflow_not_i_fu_858_p2;
wire   [0:0] p_121_demorgan_i_i_no_fu_868_p2;
wire   [0:0] brmerge_i_i_i_not_i_fu_863_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_886_p2;
wire   [0:0] sel_tmp50_i_fu_890_p2;
wire   [0:0] sel_tmp51_i_fu_896_p2;
wire   [0:0] tmp_demorgan_i_fu_854_p2;
wire   [0:0] tmp_s_fu_901_p2;
wire   [0:0] tmp_31_fu_907_p2;
wire   [0:0] sel_tmp55_demorgan_i_fu_919_p2;
wire   [0:0] brmerge_i_fu_873_p2;
wire   [0:0] sel_tmp55_i_fu_924_p2;
wire   [0:0] sel_tmp56_i_fu_930_p2;
wire   [7:0] p_Val2_12_0_i_i_mux_fu_879_p3;
wire   [7:0] sel_tmp52_i_fu_912_p3;
reg    grp_fu_201_ce;
reg    grp_fu_205_ce;
reg    grp_fu_210_ce;
reg    grp_fu_215_ce;
reg    grp_fu_220_ce;
reg    grp_fu_223_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
end

edge_detector_fadlbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
edge_detector_fadlbW_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_reg_993),
    .din1(t2_reg_998),
    .ce(grp_fu_201_ce),
    .dout(grp_fu_201_p2)
);

edge_detector_fadlbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
edge_detector_fadlbW_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_42_i_reg_1003),
    .din1(32'd0),
    .ce(grp_fu_205_ce),
    .dout(grp_fu_205_p2)
);

edge_detector_fmumb6 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
edge_detector_fmumb6_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_i_reg_983),
    .din1(32'd1056964608),
    .ce(grp_fu_210_ce),
    .dout(grp_fu_210_p2)
);

edge_detector_fmumb6 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
edge_detector_fmumb6_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_41_i_reg_988),
    .din1(32'd1056964608),
    .ce(grp_fu_215_ce),
    .dout(grp_fu_215_p2)
);

edge_detector_sitncg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
edge_detector_sitncg_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_220_p0),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p1)
);

edge_detector_sitncg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
edge_detector_sitncg_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .ce(grp_fu_223_ce),
    .dout(grp_fu_223_p1)
);

edge_detector_fpeocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
edge_detector_fpeocq_U57(
    .din0(sum_reg_1008),
    .dout(d_assign_fu_226_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_i_fu_229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_i_fu_229_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end else if (((exitcond1_i_fu_229_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter31 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_241_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_5_reg_190 <= j_V_fu_247_p2;
    end else if (((exitcond1_i_fu_229_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_5_reg_190 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        t_V_reg_179 <= i_V_reg_949;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_179 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter26_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_2_reg_1085 <= F2_2_fu_375_p3;
        icmp_reg_1098 <= icmp_fu_396_p2;
        p_Val2_s_reg_1064 <= p_Val2_s_fu_353_p3;
        tmp_1_i_reg_1079 <= tmp_1_i_fu_365_p2;
        tmp_64_reg_1092 <= tmp_64_fu_382_p1;
        tmp_8_i_reg_1073 <= tmp_8_i_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter25_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_reg_1046 <= F2_fu_324_p2;
        isneg_reg_1031 <= ireg_V_fu_290_p1[32'd63];
        tmp_3_i_reg_1057 <= tmp_3_i_fu_330_p2;
        tmp_62_reg_1041 <= tmp_62_fu_320_p1;
        tmp_i_i_i_99_reg_1020 <= tmp_i_i_i_99_fu_284_p2;
        tmp_i_i_i_reg_1014 <= tmp_i_i_i_fu_278_p2;
        tmp_reg_1026 <= tmp_fu_294_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter28_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_1_reg_1184 <= Range1_all_ones_1_fu_655_p2;
        Range1_all_zeros_1_reg_1201 <= Range1_all_zeros_1_fu_676_p2;
        Range2_all_ones_reg_1191 <= Range2_all_ones_fu_666_p2;
        carry_1_i_i_i_reg_1165 <= carry_1_i_i_i_fu_617_p2;
        rev_reg_1177 <= rev_fu_631_p2;
        sel_tmp12_demorgan_i_reg_1160 <= sel_tmp12_demorgan_i_fu_596_p2;
        sel_tmp34_i_reg_1206 <= sel_tmp34_i_fu_691_p2;
        sel_tmp9_i_reg_1155 <= sel_tmp9_i_fu_588_p3;
        tmp_18_i_reg_1171 <= tmp_18_i_fu_626_p2;
        tmp_25_i_reg_1196 <= tmp_25_i_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter27_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range2_V_1_reg_1144 <= Range2_V_1_fu_486_p2;
        p_Val2_12_reg_1104 <= p_Val2_12_fu_430_p3;
        pos1_reg_1115 <= pos1_fu_446_p2;
        tmp_23_i_reg_1132 <= tmp_23_i_fu_476_p2;
        tmp_24_i_reg_1139[31 : 0] <= tmp_24_i_fu_482_p1[31 : 0];
        tmp_27_i_reg_1150 <= tmp_27_i_fu_491_p2;
        tmp_68_reg_1109 <= p_Val2_12_fu_430_p3[32'd7];
        tmp_71_reg_1121 <= pos1_fu_446_p2[32'd11];
        tmp_73_reg_1127 <= pos2_fu_451_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_i_reg_954 <= ap_reg_pp0_iter9_exitcond_i_reg_954;
        ap_reg_pp0_iter11_exitcond_i_reg_954 <= ap_reg_pp0_iter10_exitcond_i_reg_954;
        ap_reg_pp0_iter12_exitcond_i_reg_954 <= ap_reg_pp0_iter11_exitcond_i_reg_954;
        ap_reg_pp0_iter13_exitcond_i_reg_954 <= ap_reg_pp0_iter12_exitcond_i_reg_954;
        ap_reg_pp0_iter14_exitcond_i_reg_954 <= ap_reg_pp0_iter13_exitcond_i_reg_954;
        ap_reg_pp0_iter15_exitcond_i_reg_954 <= ap_reg_pp0_iter14_exitcond_i_reg_954;
        ap_reg_pp0_iter16_exitcond_i_reg_954 <= ap_reg_pp0_iter15_exitcond_i_reg_954;
        ap_reg_pp0_iter17_exitcond_i_reg_954 <= ap_reg_pp0_iter16_exitcond_i_reg_954;
        ap_reg_pp0_iter18_exitcond_i_reg_954 <= ap_reg_pp0_iter17_exitcond_i_reg_954;
        ap_reg_pp0_iter19_exitcond_i_reg_954 <= ap_reg_pp0_iter18_exitcond_i_reg_954;
        ap_reg_pp0_iter20_exitcond_i_reg_954 <= ap_reg_pp0_iter19_exitcond_i_reg_954;
        ap_reg_pp0_iter21_exitcond_i_reg_954 <= ap_reg_pp0_iter20_exitcond_i_reg_954;
        ap_reg_pp0_iter22_exitcond_i_reg_954 <= ap_reg_pp0_iter21_exitcond_i_reg_954;
        ap_reg_pp0_iter23_exitcond_i_reg_954 <= ap_reg_pp0_iter22_exitcond_i_reg_954;
        ap_reg_pp0_iter24_exitcond_i_reg_954 <= ap_reg_pp0_iter23_exitcond_i_reg_954;
        ap_reg_pp0_iter25_exitcond_i_reg_954 <= ap_reg_pp0_iter24_exitcond_i_reg_954;
        ap_reg_pp0_iter26_exitcond_i_reg_954 <= ap_reg_pp0_iter25_exitcond_i_reg_954;
        ap_reg_pp0_iter27_F2_reg_1046 <= F2_reg_1046;
        ap_reg_pp0_iter27_exitcond_i_reg_954 <= ap_reg_pp0_iter26_exitcond_i_reg_954;
        ap_reg_pp0_iter27_isneg_reg_1031 <= isneg_reg_1031;
        ap_reg_pp0_iter27_tmp_3_i_reg_1057 <= tmp_3_i_reg_1057;
        ap_reg_pp0_iter27_tmp_i_i_i_99_reg_1020 <= tmp_i_i_i_99_reg_1020;
        ap_reg_pp0_iter27_tmp_i_i_i_reg_1014 <= tmp_i_i_i_reg_1014;
        ap_reg_pp0_iter28_F2_2_reg_1085 <= F2_2_reg_1085;
        ap_reg_pp0_iter28_F2_reg_1046 <= ap_reg_pp0_iter27_F2_reg_1046;
        ap_reg_pp0_iter28_exitcond_i_reg_954 <= ap_reg_pp0_iter27_exitcond_i_reg_954;
        ap_reg_pp0_iter28_icmp_reg_1098 <= icmp_reg_1098;
        ap_reg_pp0_iter28_isneg_reg_1031 <= ap_reg_pp0_iter27_isneg_reg_1031;
        ap_reg_pp0_iter28_p_Val2_s_reg_1064 <= p_Val2_s_reg_1064;
        ap_reg_pp0_iter28_tmp_1_i_reg_1079 <= tmp_1_i_reg_1079;
        ap_reg_pp0_iter28_tmp_3_i_reg_1057 <= ap_reg_pp0_iter27_tmp_3_i_reg_1057;
        ap_reg_pp0_iter28_tmp_64_reg_1092 <= tmp_64_reg_1092;
        ap_reg_pp0_iter28_tmp_8_i_reg_1073 <= tmp_8_i_reg_1073;
        ap_reg_pp0_iter28_tmp_i_i_i_99_reg_1020 <= ap_reg_pp0_iter27_tmp_i_i_i_99_reg_1020;
        ap_reg_pp0_iter28_tmp_i_i_i_reg_1014 <= ap_reg_pp0_iter27_tmp_i_i_i_reg_1014;
        ap_reg_pp0_iter29_F2_2_reg_1085 <= ap_reg_pp0_iter28_F2_2_reg_1085;
        ap_reg_pp0_iter29_exitcond_i_reg_954 <= ap_reg_pp0_iter28_exitcond_i_reg_954;
        ap_reg_pp0_iter29_icmp_reg_1098 <= ap_reg_pp0_iter28_icmp_reg_1098;
        ap_reg_pp0_iter29_isneg_reg_1031 <= ap_reg_pp0_iter28_isneg_reg_1031;
        ap_reg_pp0_iter29_tmp_23_i_reg_1132 <= tmp_23_i_reg_1132;
        ap_reg_pp0_iter29_tmp_64_reg_1092 <= ap_reg_pp0_iter28_tmp_64_reg_1092;
        ap_reg_pp0_iter29_tmp_73_reg_1127 <= tmp_73_reg_1127;
        ap_reg_pp0_iter29_tmp_8_i_reg_1073 <= ap_reg_pp0_iter28_tmp_8_i_reg_1073;
        ap_reg_pp0_iter29_tmp_i_i_i_99_reg_1020 <= ap_reg_pp0_iter28_tmp_i_i_i_99_reg_1020;
        ap_reg_pp0_iter29_tmp_i_i_i_reg_1014 <= ap_reg_pp0_iter28_tmp_i_i_i_reg_1014;
        ap_reg_pp0_iter2_exitcond_i_reg_954 <= ap_reg_pp0_iter1_exitcond_i_reg_954;
        ap_reg_pp0_iter30_exitcond_i_reg_954 <= ap_reg_pp0_iter29_exitcond_i_reg_954;
        ap_reg_pp0_iter30_tmp_8_i_reg_1073 <= ap_reg_pp0_iter29_tmp_8_i_reg_1073;
        ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020 <= ap_reg_pp0_iter29_tmp_i_i_i_99_reg_1020;
        ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 <= ap_reg_pp0_iter29_tmp_i_i_i_reg_1014;
        ap_reg_pp0_iter3_exitcond_i_reg_954 <= ap_reg_pp0_iter2_exitcond_i_reg_954;
        ap_reg_pp0_iter4_exitcond_i_reg_954 <= ap_reg_pp0_iter3_exitcond_i_reg_954;
        ap_reg_pp0_iter5_exitcond_i_reg_954 <= ap_reg_pp0_iter4_exitcond_i_reg_954;
        ap_reg_pp0_iter6_exitcond_i_reg_954 <= ap_reg_pp0_iter5_exitcond_i_reg_954;
        ap_reg_pp0_iter7_exitcond_i_reg_954 <= ap_reg_pp0_iter6_exitcond_i_reg_954;
        ap_reg_pp0_iter8_exitcond_i_reg_954 <= ap_reg_pp0_iter7_exitcond_i_reg_954;
        ap_reg_pp0_iter9_exitcond_i_reg_954 <= ap_reg_pp0_iter8_exitcond_i_reg_954;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_i_reg_954 <= exitcond_i_reg_954;
        exitcond_i_reg_954 <= exitcond_i_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_949 <= i_V_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter29_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_121_demorgan_i_i_i_reg_1224 <= p_121_demorgan_i_i_i_fu_848_p2;
        p_Val2_14_reg_1212 <= p_Val2_14_fu_714_p3;
        underflow_reg_1218 <= underflow_fu_835_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter24_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_1008 <= grp_fu_205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter10_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t1_reg_993 <= grp_fu_210_p2;
        t2_reg_998 <= grp_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_39_i_reg_983 <= grp_fu_220_p1;
        tmp_41_i_reg_988 <= grp_fu_223_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter17_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_42_i_reg_1003 <= grp_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_954 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_74_reg_963 <= src1_data_stream_V_dout;
        tmp_75_reg_968 <= src2_data_stream_V_dout;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_241_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i_fu_229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i_fu_229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter30_exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter30_exitcond_i_reg_954 == 1'd0) & (ap_enable_reg_pp0_iter31 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_201_ce = 1'b1;
    end else begin
        grp_fu_201_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_205_ce = 1'b1;
    end else begin
        grp_fu_205_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_210_ce = 1'b1;
    end else begin
        grp_fu_210_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_215_ce = 1'b1;
    end else begin
        grp_fu_215_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_223_ce = 1'b1;
    end else begin
        grp_fu_223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_V_blk_n = src1_data_stream_V_empty_n;
    end else begin
        src1_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_954 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_V_read = 1'b1;
    end else begin
        src1_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_954 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_V_blk_n = src2_data_stream_V_empty_n;
    end else begin
        src2_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_954 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_V_read = 1'b1;
    end else begin
        src2_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_i_fu_229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_i_fu_241_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter30 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter30 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((exitcond_i_fu_241_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast_i_fu_402_p1 = $signed(F2_2_reg_1085);

assign F2_2_fu_375_p3 = ((tmp_1_i_fu_365_p2[0:0] === 1'b1) ? F2_reg_1046 : tmp_2_i_fu_370_p2);

assign F2_fu_324_p2 = (12'd1075 - tmp_6_i_fu_316_p1);

assign Range1_all_ones_1_fu_655_p2 = (tmp_18_i_fu_626_p2 & tmp4_fu_649_p2);

assign Range1_all_ones_2_i_fu_804_p2 = (carry_1_i_i_i_reg_1165 & Range1_all_ones_2_i_s_fu_774_p3);

assign Range1_all_ones_2_i_s_fu_774_p3 = ((or_cond117_i_i_i_fu_746_p2[0:0] === 1'b1) ? Range1_all_ones_fu_750_p2 : sel_tmp35_i_fu_769_p3);

assign Range1_all_ones_fu_750_p2 = (Range2_all_ones_1_i_s_fu_739_p3 & Range1_all_ones_1_reg_1184);

assign Range1_all_zeros_1_fu_676_p2 = ((ap_reg_pp0_iter28_p_Val2_s_reg_1064 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_789_p3 = ((or_cond117_i_i_i_fu_746_p2[0:0] === 1'b1) ? p_122_i_i_i_fu_760_p2 : sel_tmp39_i_fu_782_p3);

assign Range1_all_zeros_fu_755_p2 = (1'd1 ^ Range1_all_ones_1_reg_1184);

assign Range2_V_1_fu_486_p2 = p_Val2_s_reg_1064 >> tmp_24_i_fu_482_p1;

assign Range2_all_ones_1_i_s_fu_739_p3 = ((or_cond115_i_i_i_fu_734_p2[0:0] === 1'b1) ? Range2_all_ones_reg_1191 : rev4_fu_729_p2);

assign Range2_all_ones_fu_666_p2 = ((Range2_V_1_reg_1144 == r_V_fu_661_p2) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter30_exitcond_i_reg_954 == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_954 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_954 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter30_exitcond_i_reg_954 == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_954 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_954 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter30_exitcond_i_reg_954 == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_954 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_954 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_pp0_stage0_iter31 = ((ap_reg_pp0_iter30_exitcond_i_reg_954 == 1'd0) & (dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_reg_954 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_954 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign brmerge_i_fu_873_p2 = (underflow_not_i_fu_858_p2 | p_121_demorgan_i_i_no_fu_868_p2);

assign brmerge_i_i_i_not_i_fu_863_p2 = (underflow_not_i_fu_858_p2 & p_121_demorgan_i_i_i_reg_1224);

assign carry_1_i_i_i_fu_617_p2 = (tmp3_fu_611_p2 & sel_tmp3_i_fu_564_p2);

assign deleted_zeros_fu_797_p3 = ((carry_1_i_i_i_reg_1165[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_774_p3 : Range1_all_zeros_2_i_fu_789_p3);

assign dst_data_stream_V_din = ((sel_tmp56_i_fu_930_p2[0:0] === 1'b1) ? p_Val2_12_0_i_i_mux_fu_879_p3 : sel_tmp52_i_fu_912_p3);

assign exitcond1_i_fu_229_p2 = ((t_V_reg_179 == 11'd1080) ? 1'b1 : 1'b0);

assign exitcond_i_fu_241_p2 = ((t_V_5_reg_190 == 11'd1920) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_306_p4 = {{ireg_V_fu_290_p1[62:52]}};

assign grp_fu_220_p0 = tmp_74_reg_963;

assign grp_fu_223_p0 = tmp_75_reg_968;

assign i_V_fu_235_p2 = (t_V_reg_179 + 11'd1);

assign icmp_fu_396_p2 = ((tmp_65_fu_386_p4 == 9'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_290_p1 = d_assign_fu_226_p1;

assign j_V_fu_247_p2 = (t_V_5_reg_190 + 11'd1);

assign lD_fu_645_p1 = tmp_21_i_fu_640_p2[0:0];

assign loc_V_1_fu_274_p1 = p_Val2_10_fu_261_p1[22:0];

assign loc_V_fu_264_p4 = {{p_Val2_10_fu_261_p1[30:23]}};

assign man_V_1_fu_347_p2 = (54'd0 - p_Result_s_fu_343_p1);

assign newsignbit_fu_721_p3 = p_Val2_14_fu_714_p3[32'd7];

assign not_sel_tmp28_i_fu_605_p2 = (tmp_9_not_i_fu_600_p2 | sel_tmp12_demorgan_i_fu_596_p2);

assign or_cond115_i_i_i_fu_734_p2 = (rev4_fu_729_p2 & ap_reg_pp0_iter29_tmp_23_i_reg_1132);

assign or_cond117_i_i_i_fu_746_p2 = (rev_reg_1177 & ap_reg_pp0_iter29_tmp_23_i_reg_1132);

assign p_119_i_i_i_fu_765_p2 = (rev_reg_1177 | Range1_all_zeros_1_reg_1201);

assign p_121_demorgan_i_i_i_fu_848_p2 = (tmp6_fu_843_p2 | deleted_zeros_fu_797_p3);

assign p_121_demorgan_i_i_no_fu_868_p2 = (p_121_demorgan_i_i_i_reg_1224 ^ 1'd1);

assign p_122_i_i_i_fu_760_p2 = (tmp_25_i_reg_1196 & Range1_all_zeros_fu_755_p2);

assign p_Result_s_fu_343_p1 = tmp_i1_fu_336_p3;

assign p_Val2_0_i_i_i6_i_fu_423_p3 = ((ap_reg_pp0_iter27_isneg_reg_1031[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Val2_10_fu_261_p1 = sum_reg_1008;

assign p_Val2_12_0_i_i_mux_fu_879_p3 = ((brmerge_i_i_i_not_i_fu_863_p2[0:0] === 1'b1) ? p_Val2_14_reg_1212 : 8'd255);

assign p_Val2_12_fu_430_p3 = ((tmp_5_i_fu_405_p2[0:0] === 1'b1) ? tmp_66_fu_419_p1 : p_Val2_0_i_i_i6_i_fu_423_p3);

assign p_Val2_13_fu_529_p2 = (tmp_16_i_fu_525_p1 + p_Val2_12_reg_1104);

assign p_Val2_14_fu_714_p3 = ((sel_tmp13_i_fu_709_p2[0:0] === 1'b1) ? tmp_13_i_fu_699_p2 : sel_tmp9_i_reg_1155);

assign p_Val2_s_fu_353_p3 = ((isneg_reg_1031[0:0] === 1'b1) ? man_V_1_fu_347_p2 : p_Result_s_fu_343_p1);

assign pos1_cast_i_fu_623_p1 = $signed(pos1_reg_1115);

assign pos1_fu_446_p2 = (12'd8 + ap_reg_pp0_iter27_F2_reg_1046);

assign pos2_cast_i_fu_456_p1 = $signed(pos2_fu_451_p2);

assign pos2_fu_451_p2 = (12'd9 + ap_reg_pp0_iter27_F2_reg_1046);

assign qb_fu_518_p3 = ((tmp_14_i_fu_497_p2[0:0] === 1'b1) ? ap_reg_pp0_iter28_isneg_reg_1031 : tmp_67_fu_511_p3);

assign r_V_fu_661_p2 = 54'd18014398509481983 >> tmp_24_i_reg_1139;

assign rev4_fu_729_p2 = (ap_reg_pp0_iter29_tmp_73_reg_1127 ^ 1'd1);

assign rev_fu_631_p2 = (tmp_71_reg_1121 ^ 1'd1);

assign sel_tmp12_demorgan_i_fu_596_p2 = (ap_reg_pp0_iter28_tmp_3_i_reg_1057 | ap_reg_pp0_iter28_tmp_1_i_reg_1079);

assign sel_tmp12_i_fu_704_p2 = (sel_tmp12_demorgan_i_reg_1160 ^ 1'd1);

assign sel_tmp13_i_fu_709_p2 = (sel_tmp12_i_fu_704_p2 & ap_reg_pp0_iter29_icmp_reg_1098);

assign sel_tmp1_i_fu_554_p2 = (ap_reg_pp0_iter28_tmp_3_i_reg_1057 ^ 1'd1);

assign sel_tmp2_i_fu_559_p2 = (sel_tmp1_i_fu_554_p2 & ap_reg_pp0_iter28_tmp_1_i_reg_1079);

assign sel_tmp33_i_fu_686_p2 = (tmp_71_reg_1121 | tmp_23_i_not_fu_681_p2);

assign sel_tmp34_i_fu_691_p2 = (tmp_27_i_reg_1150 & sel_tmp33_i_fu_686_p2);

assign sel_tmp35_i_fu_769_p3 = ((sel_tmp34_i_reg_1206[0:0] === 1'b1) ? Range1_all_ones_1_reg_1184 : rev_reg_1177);

assign sel_tmp39_i_fu_782_p3 = ((sel_tmp34_i_reg_1206[0:0] === 1'b1) ? Range1_all_zeros_fu_755_p2 : p_119_i_i_i_fu_765_p2);

assign sel_tmp3_i_fu_564_p2 = (tmp_68_reg_1109 & sel_tmp2_i_fu_559_p2);

assign sel_tmp41_i_fu_815_p2 = (tmp_18_i_reg_1171 ^ 1'd1);

assign sel_tmp46_i_fu_826_p2 = (tmp5_fu_820_p2 & ap_reg_pp0_iter29_isneg_reg_1031);

assign sel_tmp47_i_fu_831_p2 = (tmp_18_i_reg_1171 & ap_reg_pp0_iter29_isneg_reg_1031);

assign sel_tmp4_i_fu_569_p3 = ((sel_tmp3_i_fu_564_p2[0:0] === 1'b1) ? p_Val2_13_fu_529_p2 : sel_tmp_i_fu_548_p3);

assign sel_tmp50_i_demorgan_fu_886_p2 = (ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 & ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020);

assign sel_tmp50_i_fu_890_p2 = (sel_tmp50_i_demorgan_fu_886_p2 ^ 1'd1);

assign sel_tmp51_i_fu_896_p2 = (sel_tmp50_i_fu_890_p2 & ap_reg_pp0_iter30_tmp_8_i_reg_1073);

assign sel_tmp52_i_fu_912_p3 = ((tmp_31_fu_907_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_14_reg_1212);

assign sel_tmp55_demorgan_i_fu_919_p2 = (tmp_demorgan_i_fu_854_p2 | ap_reg_pp0_iter30_tmp_8_i_reg_1073);

assign sel_tmp55_i_fu_924_p2 = (sel_tmp55_demorgan_i_fu_919_p2 ^ 1'd1);

assign sel_tmp56_i_fu_930_p2 = (sel_tmp55_i_fu_924_p2 & brmerge_i_fu_873_p2);

assign sel_tmp7_i_fu_577_p2 = (tmp_68_reg_1109 ^ 1'd1);

assign sel_tmp8_i_fu_582_p2 = (sel_tmp7_i_fu_577_p2 & sel_tmp2_i_fu_559_p2);

assign sel_tmp9_i_fu_588_p3 = ((sel_tmp8_i_fu_582_p2[0:0] === 1'b1) ? p_Val2_13_fu_529_p2 : sel_tmp4_i_fu_569_p3);

assign sel_tmp_i_fu_548_p3 = ((ap_reg_pp0_iter28_tmp_3_i_reg_1057[0:0] === 1'b1) ? ap_reg_pp0_iter28_tmp_64_reg_1092 : 8'd0);

assign tmp3_fu_611_p2 = (tmp_17_i_fu_542_p2 & not_sel_tmp28_i_fu_605_p2);

assign tmp4_fu_649_p2 = (rev_fu_631_p2 & lD_fu_645_p1);

assign tmp5_fu_820_p2 = (sel_tmp41_i_fu_815_p2 & newsignbit_fu_721_p3);

assign tmp6_fu_843_p2 = (sel_tmp41_i_fu_815_p2 | ap_reg_pp0_iter29_isneg_reg_1031);

assign tmp_10_i_fu_410_p1 = $unsigned(F2_2_cast_i_fu_402_p1);

assign tmp_11_i_fu_414_p2 = $signed(p_Val2_s_reg_1064) >>> tmp_10_i_fu_410_p1;

assign tmp_13_i_fu_699_p2 = ap_reg_pp0_iter29_tmp_64_reg_1092 << tmp_63_fu_696_p1;

assign tmp_14_i_fu_497_p2 = (($signed(ap_reg_pp0_iter28_F2_reg_1046) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_502_p2 = ($signed(12'd4095) + $signed(ap_reg_pp0_iter28_F2_reg_1046));

assign tmp_16_i_fu_525_p1 = qb_fu_518_p3;

assign tmp_17_i_fu_542_p2 = (tmp_69_fu_534_p3 ^ 1'd1);

assign tmp_18_i_fu_626_p2 = (($signed(pos1_reg_1115) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_19_cast_i_fu_507_p1 = tmp_15_i_fu_502_p2;

assign tmp_1_i_fu_365_p2 = (($signed(F2_reg_1046) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_636_p1 = $unsigned(pos1_cast_i_fu_623_p1);

assign tmp_21_i_fu_640_p2 = $signed(ap_reg_pp0_iter28_p_Val2_s_reg_1064) >>> tmp_20_i_fu_636_p1;

assign tmp_23_i_fu_476_p2 = (($signed(pos2_fu_451_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_23_i_not_fu_681_p2 = (tmp_23_i_reg_1132 ^ 1'd1);

assign tmp_24_i_fu_482_p1 = $unsigned(pos2_cast_i_fu_456_p1);

assign tmp_25_i_fu_671_p2 = ((Range2_V_1_reg_1144 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_27_i_fu_491_p2 = ((pos2_fu_451_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_28_i2_fu_809_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_804_p2);

assign tmp_2_i_fu_370_p2 = (12'd0 - F2_reg_1046);

assign tmp_31_fu_907_p2 = (underflow_reg_1218 | tmp_s_fu_901_p2);

assign tmp_3_i_fu_330_p2 = ((exp_tmp_V_fu_306_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_5_i_fu_405_p2 = ((F2_2_reg_1085 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_62_fu_320_p1 = ireg_V_fu_290_p1[51:0];

assign tmp_63_fu_696_p1 = ap_reg_pp0_iter29_F2_2_reg_1085[7:0];

assign tmp_64_fu_382_p1 = p_Val2_s_fu_353_p3[7:0];

assign tmp_65_fu_386_p4 = {{F2_2_fu_375_p3[11:3]}};

assign tmp_66_fu_419_p1 = tmp_11_i_fu_414_p2[7:0];

assign tmp_67_fu_511_p3 = ap_reg_pp0_iter28_p_Val2_s_reg_1064[tmp_19_cast_i_fu_507_p1];

assign tmp_69_fu_534_p3 = p_Val2_13_fu_529_p2[32'd7];

assign tmp_6_i_fu_316_p1 = exp_tmp_V_fu_306_p4;

assign tmp_8_i_fu_360_p2 = ((tmp_reg_1026 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_9_not_i_fu_600_p2 = (ap_reg_pp0_iter28_icmp_reg_1098 ^ 1'd1);

assign tmp_demorgan_i_fu_854_p2 = (ap_reg_pp0_iter30_tmp_i_i_i_reg_1014 & ap_reg_pp0_iter30_tmp_i_i_i_99_reg_1020);

assign tmp_fu_294_p1 = ireg_V_fu_290_p1[62:0];

assign tmp_i1_fu_336_p3 = {{1'd1}, {tmp_62_reg_1041}};

assign tmp_i_i_i_99_fu_284_p2 = ((loc_V_1_fu_274_p1 != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_fu_278_p2 = ((loc_V_fu_264_p4 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_s_fu_901_p2 = (tmp_demorgan_i_fu_854_p2 | sel_tmp51_i_fu_896_p2);

assign underflow_fu_835_p3 = ((sel_tmp47_i_fu_831_p2[0:0] === 1'b1) ? tmp_28_i2_fu_809_p2 : sel_tmp46_i_fu_826_p2);

assign underflow_not_i_fu_858_p2 = (underflow_reg_1218 ^ 1'd1);

always @ (posedge ap_clk) begin
    tmp_24_i_reg_1139[53:32] <= 22'b0000000000000000000000;
end

endmodule //AddWeighted
